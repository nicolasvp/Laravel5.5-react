(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactBootstrapTable"] = factory(require("react"));
	else
		root["ReactBootstrapTable"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 21);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (false) {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(4)();
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  SORT_ASC: 'asc',
  SORT_DESC: 'desc',
  ROW_SELECT_SINGLE: 'radio',
  ROW_SELECT_MULTIPLE: 'checkbox',
  ROW_SELECT_DISABLED: 'ROW_SELECT_DISABLED',
  CHECKBOX_STATUS_CHECKED: 'checked',
  CHECKBOX_STATUS_INDETERMINATE: 'indeterminate',
  CHECKBOX_STATUS_UNCHECKED: 'unchecked'
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* eslint no-empty: 0 */
/* eslint no-param-reassign: 0 */
/* eslint prefer-rest-params: 0 */

function splitNested(str) {
  return [str].join('.').replace(/\[/g, '.').replace(/\]/g, '').split('.');
}

function get(target, field) {
  var pathArray = splitNested(field);
  var result = void 0;
  try {
    result = pathArray.reduce(function (curr, path) {
      return curr[path];
    }, target);
  } catch (e) {}
  return result;
}

function set(target, field, value) {
  var safe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

  var pathArray = splitNested(field);
  var level = 0;
  pathArray.reduce(function (a, b) {
    level += 1;
    if (typeof a[b] === 'undefined') {
      if (!safe) throw new Error(a + '.' + b + ' is undefined');
      a[b] = {};
      return a[b];
    }

    if (level === pathArray.length) {
      a[b] = value;
      return value;
    }
    return a[b];
  }, target);
}

function isFunction(obj) {
  return obj && typeof obj === 'function';
}

/**
 * Checks if `value` is the Object. the `Object` except `Function` and `Array.`
 *
 * @param {*} obj - The value gonna check
 */
function isObject(obj) {
  var type = typeof obj === 'undefined' ? 'undefined' : _typeof(obj);
  return obj !== null && type === 'object' && obj.constructor === Object;
}

function isEmptyObject(obj) {
  if (!isObject(obj)) return false;

  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var keys = Object.keys(obj);

  for (var i = 0; i < keys.length; i += 1) {
    if (hasOwnProperty.call(obj, keys[i])) return false;
  }

  return true;
}

function isDefined(value) {
  return typeof value !== 'undefined' && value !== null;
}

function sleep(fn, ms) {
  return setTimeout(function () {
    return fn();
  }, ms);
}

function debounce(func, wait, immediate) {
  var _this = this,
      _arguments = arguments;

  var timeout = void 0;

  return function () {
    var later = function later() {
      timeout = null;

      if (!immediate) {
        func.apply(_this, _arguments);
      }
    };

    var callNow = immediate && !timeout;

    clearTimeout(timeout);
    timeout = setTimeout(later, wait || 0);

    if (callNow) {
      func.appy(_this, _arguments);
    }
  };
}

exports.default = {
  get: get,
  set: set,
  isFunction: isFunction,
  isObject: isObject,
  isEmptyObject: isEmptyObject,
  isDefined: isDefined,
  sleep: sleep,
  debounce: debounce
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(5);
var invariant = __webpack_require__(6);
var ReactPropTypesSecret = __webpack_require__(7);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (false) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var matchRow = exports.matchRow = function matchRow(keyField, id) {
  return function (row) {
    return row[keyField] === id;
  };
};

var getRowByRowId = exports.getRowByRowId = function getRowByRowId(_ref) {
  var data = _ref.data,
      keyField = _ref.keyField;
  return function (id) {
    return data.find(matchRow(keyField, id));
  };
};

/***/ }),
/* 14 */,
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSelectedRows = exports.unSelectableKeys = exports.selectableKeys = exports.isAnySelectedRow = exports.isSelectedAll = undefined;

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

var _rows = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isSelectedAll = exports.isSelectedAll = function isSelectedAll(_ref) {
  var data = _ref.data,
      selected = _ref.selected;
  return data.length === selected.length;
};

var isAnySelectedRow = exports.isAnySelectedRow = function isAnySelectedRow(_ref2) {
  var selected = _ref2.selected;
  return function () {
    var skips = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    if (skips.length === 0) {
      return selected.length > 0;
    }
    return selected.filter(function (x) {
      return !skips.includes(x);
    }).length;
  };
};

var selectableKeys = exports.selectableKeys = function selectableKeys(_ref3) {
  var data = _ref3.data,
      keyField = _ref3.keyField;
  return function () {
    var skips = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    if (skips.length === 0) {
      return data.map(function (row) {
        return _utils2.default.get(row, keyField);
      });
    }
    return data.filter(function (row) {
      return !skips.includes(_utils2.default.get(row, keyField));
    }).map(function (row) {
      return _utils2.default.get(row, keyField);
    });
  };
};

var unSelectableKeys = exports.unSelectableKeys = function unSelectableKeys(_ref4) {
  var selected = _ref4.selected;
  return function () {
    var skips = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    if (skips.length === 0) {
      return [];
    }
    return selected.filter(function (x) {
      return skips.includes(x);
    });
  };
};

var getSelectedRows = exports.getSelectedRows = function getSelectedRows(store) {
  var getRow = (0, _rows.getRowByRowId)(store);
  return store.selected.map(function (k) {
    return getRow(k);
  });
};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = function (ExtendBase) {
  return function (_ExtendBase) {
    _inherits(RemoteResolver, _ExtendBase);

    function RemoteResolver() {
      _classCallCheck(this, RemoteResolver);

      return _possibleConstructorReturn(this, (RemoteResolver.__proto__ || Object.getPrototypeOf(RemoteResolver)).apply(this, arguments));
    }

    _createClass(RemoteResolver, [{
      key: 'getNewestState',
      value: function getNewestState() {
        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var store = this.store || this.props.store;
        return _extends({
          page: store.page,
          sizePerPage: store.sizePerPage,
          filters: store.filters,
          sortField: store.sortField,
          sortOrder: store.sortOrder,
          data: store.getAllData()
        }, state);
      }
    }, {
      key: 'isRemotePagination',
      value: function isRemotePagination() {
        var remote = this.props.remote;

        return remote === true || _utils2.default.isObject(remote) && remote.pagination;
      }
    }, {
      key: 'isRemoteFiltering',
      value: function isRemoteFiltering() {
        var remote = this.props.remote;

        return remote === true || _utils2.default.isObject(remote) && remote.filter;
      }
    }, {
      key: 'isRemoteSort',
      value: function isRemoteSort() {
        var remote = this.props.remote;

        return remote === true || _utils2.default.isObject(remote) && remote.sort;
      }
    }, {
      key: 'isRemoteCellEdit',
      value: function isRemoteCellEdit() {
        var remote = this.props.remote;

        return remote === true || _utils2.default.isObject(remote) && remote.cellEdit;
      }
    }, {
      key: 'handleRemotePageChange',
      value: function handleRemotePageChange() {
        this.props.onTableChange('pagination', this.getNewestState());
      }
    }, {
      key: 'handleRemoteFilterChange',
      value: function handleRemoteFilterChange() {
        var newState = {};
        if (this.isRemotePagination()) {
          var options = this.props.pagination.options || {};
          newState.page = _utils2.default.isDefined(options.pageStartIndex) ? options.pageStartIndex : 1;
        }
        this.props.onTableChange('filter', this.getNewestState(newState));
      }
    }, {
      key: 'handleSortChange',
      value: function handleSortChange() {
        this.props.onTableChange('sort', this.getNewestState());
      }
    }, {
      key: 'handleCellChange',
      value: function handleCellChange(rowId, dataField, newValue) {
        var cellEdit = { rowId: rowId, dataField: dataField, newValue: newValue };
        this.props.onTableChange('cellEdit', this.getNewestState({ cellEdit: cellEdit }));
      }
    }]);

    return RemoteResolver;
  }(ExtendBase);
};

/***/ }),
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bootstrapTable = __webpack_require__(22);

var _bootstrapTable2 = _interopRequireDefault(_bootstrapTable);

var _container = __webpack_require__(37);

var _container2 = _interopRequireDefault(_container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _container2.default)(_bootstrapTable2.default);

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(12);

var _classnames2 = _interopRequireDefault(_classnames);

var _header = __webpack_require__(23);

var _header2 = _interopRequireDefault(_header);

var _caption = __webpack_require__(28);

var _caption2 = _interopRequireDefault(_caption);

var _body = __webpack_require__(29);

var _body2 = _interopRequireDefault(_body);

var _propsResolver = __webpack_require__(35);

var _propsResolver2 = _interopRequireDefault(_propsResolver);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _selection = __webpack_require__(15);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint arrow-body-style: 0 */

var BootstrapTable = function (_PropsBaseResolver) {
  _inherits(BootstrapTable, _PropsBaseResolver);

  function BootstrapTable(props) {
    _classCallCheck(this, BootstrapTable);

    var _this = _possibleConstructorReturn(this, (BootstrapTable.__proto__ || Object.getPrototypeOf(BootstrapTable)).call(this, props));

    _this.validateProps();

    _this.state = {
      data: props.data
    };
    return _this;
  }

  _createClass(BootstrapTable, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        data: nextProps.data
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          loading = _props.loading,
          overlay = _props.overlay;

      var table = this.renderTable();
      if (loading && overlay) {
        var LoadingOverlay = overlay(table, loading);
        return _react2.default.createElement(LoadingOverlay, null);
      }
      return table;
    }
  }, {
    key: 'renderTable',
    value: function renderTable() {
      var _props2 = this.props,
          store = _props2.store,
          columns = _props2.columns,
          keyField = _props2.keyField,
          id = _props2.id,
          classes = _props2.classes,
          striped = _props2.striped,
          hover = _props2.hover,
          bordered = _props2.bordered,
          condensed = _props2.condensed,
          noDataIndication = _props2.noDataIndication,
          caption = _props2.caption,
          rowStyle = _props2.rowStyle,
          rowClasses = _props2.rowClasses,
          rowEvents = _props2.rowEvents;


      var tableClass = (0, _classnames2.default)('table', {
        'table-striped': striped,
        'table-hover': hover,
        'table-bordered': bordered,
        'table-condensed': condensed
      }, classes);

      var cellSelectionInfo = this.resolveSelectRowProps({
        onRowSelect: this.props.onRowSelect
      });

      var headerCellSelectionInfo = this.resolveSelectRowPropsForHeader({
        onAllRowsSelect: this.props.onAllRowsSelect,
        selected: store.selected,
        allRowsSelected: (0, _selection.isSelectedAll)(store)
      });

      var tableCaption = caption && _react2.default.createElement(
        _caption2.default,
        null,
        caption
      );

      return _react2.default.createElement(
        'div',
        { className: 'react-bootstrap-table' },
        _react2.default.createElement(
          'table',
          { id: id, className: tableClass },
          tableCaption,
          _react2.default.createElement(_header2.default, {
            columns: columns,
            sortField: store.sortField,
            sortOrder: store.sortOrder,
            onSort: this.props.onSort,
            onFilter: this.props.onFilter,
            selectRow: headerCellSelectionInfo
          }),
          _react2.default.createElement(_body2.default, {
            data: this.state.data,
            keyField: keyField,
            columns: columns,
            isEmpty: this.isEmpty(),
            visibleColumnSize: this.visibleColumnSize(),
            noDataIndication: noDataIndication,
            cellEdit: this.props.cellEdit || {},
            selectRow: cellSelectionInfo,
            selectedRowKeys: store.selected,
            rowStyle: rowStyle,
            rowClasses: rowClasses,
            rowEvents: rowEvents
          })
        )
      );
    }
  }]);

  return BootstrapTable;
}((0, _propsResolver2.default)(_react.Component));

BootstrapTable.propTypes = {
  keyField: _propTypes2.default.string.isRequired,
  data: _propTypes2.default.array.isRequired,
  columns: _propTypes2.default.array.isRequired,
  remote: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.shape({
    pagination: _propTypes2.default.bool
  })]),
  store: _propTypes2.default.object,
  noDataIndication: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  striped: _propTypes2.default.bool,
  bordered: _propTypes2.default.bool,
  hover: _propTypes2.default.bool,
  id: _propTypes2.default.string,
  classes: _propTypes2.default.string,
  condensed: _propTypes2.default.bool,
  caption: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string]),
  pagination: _propTypes2.default.object,
  filter: _propTypes2.default.object,
  cellEdit: _propTypes2.default.object,
  selectRow: _propTypes2.default.shape({
    mode: _propTypes2.default.oneOf([_const2.default.ROW_SELECT_SINGLE, _const2.default.ROW_SELECT_MULTIPLE]).isRequired,
    clickToSelect: _propTypes2.default.bool,
    clickToEdit: _propTypes2.default.bool,
    onSelect: _propTypes2.default.func,
    onSelectAll: _propTypes2.default.func,
    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    classes: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    nonSelectable: _propTypes2.default.array,
    bgColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    hideSelectColumn: _propTypes2.default.bool
  }),
  onRowSelect: _propTypes2.default.func,
  onAllRowsSelect: _propTypes2.default.func,
  rowStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
  rowEvents: _propTypes2.default.object,
  rowClasses: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  defaultSorted: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    dataField: _propTypes2.default.string.isRequired,
    order: _propTypes2.default.oneOf([_const2.default.SORT_DESC, _const2.default.SORT_ASC]).isRequired
  })),
  defaultSortDirection: _propTypes2.default.oneOf([_const2.default.SORT_DESC, _const2.default.SORT_ASC]),
  overlay: _propTypes2.default.func,
  onTableChange: _propTypes2.default.func,
  onSort: _propTypes2.default.func,
  onFilter: _propTypes2.default.func
};

BootstrapTable.defaultProps = {
  remote: false,
  striped: false,
  bordered: true,
  hover: false,
  condensed: false,
  noDataIndication: null
};

exports.default = BootstrapTable;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _headerCell = __webpack_require__(24);

var _headerCell2 = _interopRequireDefault(_headerCell);

var _selectionHeaderCell = __webpack_require__(27);

var _selectionHeaderCell2 = _interopRequireDefault(_selectionHeaderCell);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Header = function Header(props) {
  var ROW_SELECT_DISABLED = _const2.default.ROW_SELECT_DISABLED;
  var columns = props.columns,
      onSort = props.onSort,
      onFilter = props.onFilter,
      sortField = props.sortField,
      sortOrder = props.sortOrder,
      selectRow = props.selectRow;


  return _react2.default.createElement(
    'thead',
    null,
    _react2.default.createElement(
      'tr',
      null,
      selectRow.mode !== ROW_SELECT_DISABLED && !selectRow.hideSelectColumn ? _react2.default.createElement(_selectionHeaderCell2.default, selectRow) : null,
      columns.map(function (column, i) {
        if (!column.hidden) {
          var currSort = column.dataField === sortField;
          var isLastSorting = column.dataField === sortField;

          return _react2.default.createElement(_headerCell2.default, {
            index: i,
            key: column.dataField,
            column: column,
            onSort: onSort,
            sorting: currSort,
            onFilter: onFilter,
            sortOrder: sortOrder,
            isLastSorting: isLastSorting
          });
        }
        return false;
      })
    )
  );
}; /* eslint react/require-default-props: 0 */


Header.propTypes = {
  columns: _propTypes2.default.array.isRequired,
  onSort: _propTypes2.default.func,
  onFilter: _propTypes2.default.func,
  sortField: _propTypes2.default.string,
  sortOrder: _propTypes2.default.string,
  selectRow: _propTypes2.default.object
};

exports.default = Header;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint react/require-default-props: 0 */


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(12);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _symbol = __webpack_require__(25);

var _symbol2 = _interopRequireDefault(_symbol);

var _caret = __webpack_require__(26);

var _caret2 = _interopRequireDefault(_caret);

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HeaderCell = function HeaderCell(props) {
  var column = props.column,
      index = props.index,
      onSort = props.onSort,
      sorting = props.sorting,
      sortOrder = props.sortOrder,
      isLastSorting = props.isLastSorting,
      onFilter = props.onFilter;
  var text = column.text,
      sort = column.sort,
      filter = column.filter,
      headerTitle = column.headerTitle,
      headerAlign = column.headerAlign,
      headerFormatter = column.headerFormatter,
      headerEvents = column.headerEvents,
      headerClasses = column.headerClasses,
      headerStyle = column.headerStyle,
      headerAttrs = column.headerAttrs,
      headerSortingClasses = column.headerSortingClasses,
      headerSortingStyle = column.headerSortingStyle;


  var cellAttrs = _extends({}, _utils2.default.isFunction(headerAttrs) ? headerAttrs(column, index) : headerAttrs, headerEvents);

  var sortSymbol = void 0;
  var filterElm = void 0;
  var cellStyle = {};
  var cellClasses = _utils2.default.isFunction(headerClasses) ? headerClasses(column, index) : headerClasses;

  if (headerStyle) {
    cellStyle = _utils2.default.isFunction(headerStyle) ? headerStyle(column, index) : headerStyle;
  }

  if (headerTitle) {
    cellAttrs.title = _utils2.default.isFunction(headerTitle) ? headerTitle(column, index) : text;
  }

  if (headerAlign) {
    cellStyle.textAlign = _utils2.default.isFunction(headerAlign) ? headerAlign(column, index) : headerAlign;
  }

  if (sort) {
    var customClick = cellAttrs.onClick;
    cellAttrs.onClick = function (e) {
      onSort(column);
      if (_utils2.default.isFunction(customClick)) customClick(e);
    };
    cellAttrs.className = (0, _classnames2.default)(cellAttrs.className, 'sortable');

    if (sorting) {
      sortSymbol = _react2.default.createElement(_caret2.default, { order: sortOrder });

      // append customized classes or style if table was sorting based on the current column.
      cellClasses = (0, _classnames2.default)(cellClasses, _utils2.default.isFunction(headerSortingClasses) ? headerSortingClasses(column, sortOrder, isLastSorting, index) : headerSortingClasses);

      cellStyle = _extends({}, cellStyle, _utils2.default.isFunction(headerSortingStyle) ? headerSortingStyle(column, sortOrder, isLastSorting, index) : headerSortingStyle);
    } else {
      sortSymbol = _react2.default.createElement(_symbol2.default, null);
    }
  }

  if (cellClasses) cellAttrs.className = (0, _classnames2.default)(cellAttrs.className, cellClasses);
  if (!_utils2.default.isEmptyObject(cellStyle)) cellAttrs.style = cellStyle;
  if (filter) {
    filterElm = _react2.default.createElement(filter.Filter, _extends({}, filter.props, { onFilter: onFilter, column: column }));
  }

  var children = headerFormatter ? headerFormatter(column, index, { sortElement: sortSymbol, filterElement: filterElm }) : text;

  if (headerFormatter) {
    return _react2.default.createElement('th', cellAttrs, children);
  }

  return _react2.default.createElement('th', cellAttrs, children, sortSymbol, filterElm);
};

HeaderCell.propTypes = {
  column: _propTypes2.default.shape({
    dataField: _propTypes2.default.string.isRequired,
    text: _propTypes2.default.string.isRequired,
    hidden: _propTypes2.default.bool,
    headerFormatter: _propTypes2.default.func,
    formatter: _propTypes2.default.func,
    formatExtraData: _propTypes2.default.any,
    headerClasses: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    classes: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    headerStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    headerTitle: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.func]),
    title: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.func]),
    headerEvents: _propTypes2.default.object,
    events: _propTypes2.default.object,
    headerAlign: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    align: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    headerAttrs: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    attrs: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    sort: _propTypes2.default.bool,
    sortFunc: _propTypes2.default.func,
    onSort: _propTypes2.default.func,
    editable: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.func]),
    editCellStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    editCellClasses: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    editorStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    editorClasses: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    validator: _propTypes2.default.func,
    filter: _propTypes2.default.object,
    filterValue: _propTypes2.default.func
  }).isRequired,
  index: _propTypes2.default.number.isRequired,
  onSort: _propTypes2.default.func,
  sorting: _propTypes2.default.bool,
  sortOrder: _propTypes2.default.oneOf([_const2.default.SORT_ASC, _const2.default.SORT_DESC]),
  isLastSorting: _propTypes2.default.bool,
  onFilter: _propTypes2.default.func
};

exports.default = HeaderCell;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SortSymbol = function SortSymbol() {
  return _react2.default.createElement(
    "span",
    { className: "order" },
    _react2.default.createElement(
      "span",
      { className: "dropdown" },
      _react2.default.createElement("span", { className: "caret" })
    ),
    _react2.default.createElement(
      "span",
      { className: "dropup" },
      _react2.default.createElement("span", { className: "caret" })
    )
  );
};

exports.default = SortSymbol;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(12);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SortCaret = function SortCaret(_ref) {
  var order = _ref.order;

  var orderClass = (0, _classnames2.default)('react-bootstrap-table-sort-order', {
    dropup: order === _const2.default.SORT_ASC
  });
  return _react2.default.createElement(
    'span',
    { className: orderClass },
    _react2.default.createElement('span', { className: 'caret' })
  );
};

SortCaret.propTypes = {
  order: _propTypes2.default.oneOf([_const2.default.SORT_ASC, _const2.default.SORT_DESC]).isRequired
};
exports.default = SortCaret;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckBox = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/require-default-props: 0 */


var CheckBox = exports.CheckBox = function CheckBox(_ref) {
  var checked = _ref.checked,
      indeterminate = _ref.indeterminate;
  return _react2.default.createElement('input', {
    type: 'checkbox',
    checked: checked,
    ref: function ref(input) {
      if (input) input.indeterminate = indeterminate; // eslint-disable-line no-param-reassign
    }
  });
};

CheckBox.propTypes = {
  checked: _propTypes2.default.bool.isRequired,
  indeterminate: _propTypes2.default.bool.isRequired
};

var SelectionHeaderCell = function (_Component) {
  _inherits(SelectionHeaderCell, _Component);

  function SelectionHeaderCell() {
    _classCallCheck(this, SelectionHeaderCell);

    var _this = _possibleConstructorReturn(this, (SelectionHeaderCell.__proto__ || Object.getPrototypeOf(SelectionHeaderCell)).call(this));

    _this.handleCheckBoxClick = _this.handleCheckBoxClick.bind(_this);
    return _this;
  }

  /**
   * avoid updating if button is
   * 1. radio
   * 2. status was not changed.
   */


  _createClass(SelectionHeaderCell, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      var ROW_SELECT_SINGLE = _const2.default.ROW_SELECT_SINGLE;
      var _props = this.props,
          mode = _props.mode,
          checkedStatus = _props.checkedStatus;


      if (mode === ROW_SELECT_SINGLE) return false;

      return nextProps.checkedStatus !== checkedStatus;
    }
  }, {
    key: 'handleCheckBoxClick',
    value: function handleCheckBoxClick() {
      var onAllRowsSelect = this.props.onAllRowsSelect;


      onAllRowsSelect();
    }
  }, {
    key: 'render',
    value: function render() {
      var CHECKBOX_STATUS_CHECKED = _const2.default.CHECKBOX_STATUS_CHECKED,
          CHECKBOX_STATUS_INDETERMINATE = _const2.default.CHECKBOX_STATUS_INDETERMINATE,
          ROW_SELECT_SINGLE = _const2.default.ROW_SELECT_SINGLE;
      var _props2 = this.props,
          mode = _props2.mode,
          checkedStatus = _props2.checkedStatus;


      var checked = checkedStatus === CHECKBOX_STATUS_CHECKED;

      var indeterminate = checkedStatus === CHECKBOX_STATUS_INDETERMINATE;

      return mode === ROW_SELECT_SINGLE ? _react2.default.createElement('th', { 'data-row-selection': true }) : _react2.default.createElement(
        'th',
        { 'data-row-selection': true, onClick: this.handleCheckBoxClick },
        _react2.default.createElement(CheckBox, _extends({}, this.props, {
          checked: checked,
          indeterminate: indeterminate
        }))
      );
    }
  }]);

  return SelectionHeaderCell;
}(_react.Component);

SelectionHeaderCell.propTypes = {
  mode: _propTypes2.default.string.isRequired,
  checkedStatus: _propTypes2.default.string,
  onAllRowsSelect: _propTypes2.default.func
};
exports.default = SelectionHeaderCell;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint react/require-default-props: 0 */
var Caption = function Caption(props) {
  if (!props.children) return null;
  return _react2.default.createElement(
    'caption',
    null,
    props.children
  );
};

Caption.propTypes = {
  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string])
};

exports.default = Caption;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint react/prop-types: 0 */
/* eslint react/require-default-props: 0 */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(12);

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

var _row = __webpack_require__(30);

var _row2 = _interopRequireDefault(_row);

var _rowSection = __webpack_require__(34);

var _rowSection2 = _interopRequireDefault(_rowSection);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Body = function Body(props) {
  var columns = props.columns,
      data = props.data,
      keyField = props.keyField,
      isEmpty = props.isEmpty,
      noDataIndication = props.noDataIndication,
      visibleColumnSize = props.visibleColumnSize,
      cellEdit = props.cellEdit,
      selectRow = props.selectRow,
      selectedRowKeys = props.selectedRowKeys,
      rowStyle = props.rowStyle,
      rowClasses = props.rowClasses,
      rowEvents = props.rowEvents;
  var bgColor = selectRow.bgColor,
      nonSelectable = selectRow.nonSelectable;


  var content = void 0;

  if (isEmpty) {
    var indication = _utils2.default.isFunction(noDataIndication) ? noDataIndication() : noDataIndication;
    if (!indication) {
      return null;
    }
    content = _react2.default.createElement(_rowSection2.default, { content: indication, colSpan: visibleColumnSize });
  } else {
    var nonEditableRows = cellEdit.nonEditableRows || [];
    content = data.map(function (row, index) {
      var key = _utils2.default.get(row, keyField);
      var editable = !(nonEditableRows.length > 0 && nonEditableRows.indexOf(key) > -1);

      var selected = selectRow.mode !== _const2.default.ROW_SELECT_DISABLED ? selectedRowKeys.includes(key) : null;

      var attrs = rowEvents || {};
      var style = _utils2.default.isFunction(rowStyle) ? rowStyle(row, index) : rowStyle;
      var classes = _utils2.default.isFunction(rowClasses) ? rowClasses(row, index) : rowClasses;
      if (selected) {
        var selectedStyle = _utils2.default.isFunction(selectRow.style) ? selectRow.style(row, index) : selectRow.style;

        var selectedClasses = _utils2.default.isFunction(selectRow.classes) ? selectRow.classes(row, index) : selectRow.classes;

        style = _extends({}, style, selectedStyle);
        classes = (0, _classnames2.default)(classes, selectedClasses);

        if (bgColor) {
          style = style || {};
          style.backgroundColor = _utils2.default.isFunction(bgColor) ? bgColor(row, index) : bgColor;
        }
      }

      var selectable = !nonSelectable || !nonSelectable.includes(key);

      return _react2.default.createElement(_row2.default, {
        key: key,
        row: row,
        keyField: keyField,
        rowIndex: index,
        columns: columns,
        cellEdit: cellEdit,
        editable: editable,
        selectable: selectable,
        selected: selected,
        selectRow: selectRow,
        style: style,
        className: classes,
        attrs: attrs
      });
    });
  }

  return _react2.default.createElement(
    'tbody',
    null,
    content
  );
};

Body.propTypes = {
  keyField: _propTypes2.default.string.isRequired,
  data: _propTypes2.default.array.isRequired,
  columns: _propTypes2.default.array.isRequired,
  selectRow: _propTypes2.default.object,
  selectedRowKeys: _propTypes2.default.array
};

exports.default = Body;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

var _cell = __webpack_require__(31);

var _cell2 = _interopRequireDefault(_cell);

var _selectionCell = __webpack_require__(32);

var _selectionCell2 = _interopRequireDefault(_selectionCell);

var _rowEventDelegater = __webpack_require__(33);

var _rowEventDelegater2 = _interopRequireDefault(_rowEventDelegater);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */
/* eslint react/no-array-index-key: 0 */


var Row = function (_eventDelegater) {
  _inherits(Row, _eventDelegater);

  function Row() {
    _classCallCheck(this, Row);

    return _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).apply(this, arguments));
  }

  _createClass(Row, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          row = _props.row,
          columns = _props.columns,
          keyField = _props.keyField,
          rowIndex = _props.rowIndex,
          className = _props.className,
          style = _props.style,
          attrs = _props.attrs,
          cellEdit = _props.cellEdit,
          selected = _props.selected,
          selectRow = _props.selectRow,
          selectable = _props.selectable,
          editableRow = _props.editable;

      var mode = cellEdit.mode,
          onStart = cellEdit.onStart,
          EditingCell = cellEdit.EditingCell,
          editingRowIdx = cellEdit.ridx,
          editingColIdx = cellEdit.cidx,
          CLICK_TO_CELL_EDIT = cellEdit.CLICK_TO_CELL_EDIT,
          DBCLICK_TO_CELL_EDIT = cellEdit.DBCLICK_TO_CELL_EDIT,
          rest = _objectWithoutProperties(cellEdit, ['mode', 'onStart', 'EditingCell', 'ridx', 'cidx', 'CLICK_TO_CELL_EDIT', 'DBCLICK_TO_CELL_EDIT']);

      var key = _utils2.default.get(row, keyField);
      var hideSelectColumn = selectRow.hideSelectColumn;

      var trAttrs = this.delegate(attrs);

      return _react2.default.createElement(
        'tr',
        _extends({ style: style, className: className }, trAttrs),
        selectRow.mode !== _const2.default.ROW_SELECT_DISABLED && !hideSelectColumn ? _react2.default.createElement(_selectionCell2.default, _extends({}, selectRow, {
          rowKey: key,
          rowIndex: rowIndex,
          selected: selected,
          disabled: !selectable
        })) : null,
        columns.map(function (column, index) {
          if (!column.hidden) {
            var dataField = column.dataField;

            var content = _utils2.default.get(row, dataField);
            var editable = _utils2.default.isDefined(column.editable) ? column.editable : true;
            if (dataField === keyField || !editableRow) editable = false;
            if (_utils2.default.isFunction(column.editable)) {
              editable = column.editable(content, row, rowIndex, index);
            }
            if (rowIndex === editingRowIdx && index === editingColIdx) {
              var editCellstyle = column.editCellStyle || {};
              var editCellclasses = column.editCellClasses;
              if (_utils2.default.isFunction(column.editCellStyle)) {
                editCellstyle = column.editCellStyle(content, row, rowIndex, index);
              }
              if (_utils2.default.isFunction(column.editCellClasses)) {
                editCellclasses = column.editCellClasses(content, row, rowIndex, index);
              }
              return _react2.default.createElement(EditingCell, _extends({
                key: content + '-' + index,
                row: row,
                rowIndex: rowIndex,
                column: column,
                columnIndex: index,
                className: editCellclasses,
                style: editCellstyle
              }, rest));
            }
            return _react2.default.createElement(_cell2.default, {
              key: content + '-' + index,
              row: row,
              rowIndex: rowIndex,
              columnIndex: index,
              column: column,
              onStart: onStart,
              editable: editable,
              clickToEdit: mode === CLICK_TO_CELL_EDIT,
              dbclickToEdit: mode === DBCLICK_TO_CELL_EDIT
            });
          }
          return false;
        })
      );
    }
  }]);

  return Row;
}((0, _rowEventDelegater2.default)(_react.Component));

Row.propTypes = {
  row: _propTypes2.default.object.isRequired,
  rowIndex: _propTypes2.default.number.isRequired,
  columns: _propTypes2.default.array.isRequired,
  style: _propTypes2.default.object,
  className: _propTypes2.default.string,
  attrs: _propTypes2.default.object
};

Row.defaultProps = {
  editable: true,
  style: {},
  className: null,
  attrs: {}
};

exports.default = Row;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


var Cell = function (_Component) {
  _inherits(Cell, _Component);

  function Cell(props) {
    _classCallCheck(this, Cell);

    var _this = _possibleConstructorReturn(this, (Cell.__proto__ || Object.getPrototypeOf(Cell)).call(this, props));

    _this.handleEditingCell = _this.handleEditingCell.bind(_this);
    return _this;
  }

  _createClass(Cell, [{
    key: 'handleEditingCell',
    value: function handleEditingCell(e) {
      var _props = this.props,
          column = _props.column,
          onStart = _props.onStart,
          rowIndex = _props.rowIndex,
          columnIndex = _props.columnIndex,
          clickToEdit = _props.clickToEdit,
          dbclickToEdit = _props.dbclickToEdit;
      var events = column.events;

      if (events) {
        if (clickToEdit) {
          var customClick = events.onClick;
          if (_utils2.default.isFunction(customClick)) customClick(e);
        } else if (dbclickToEdit) {
          var customDbClick = events.onDoubleClick;
          if (_utils2.default.isFunction(customDbClick)) customDbClick(e);
        }
      }
      if (onStart) {
        onStart(rowIndex, columnIndex);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          row = _props2.row,
          rowIndex = _props2.rowIndex,
          column = _props2.column,
          columnIndex = _props2.columnIndex,
          editable = _props2.editable,
          clickToEdit = _props2.clickToEdit,
          dbclickToEdit = _props2.dbclickToEdit;
      var dataField = column.dataField,
          formatter = column.formatter,
          formatExtraData = column.formatExtraData,
          style = column.style,
          classes = column.classes,
          title = column.title,
          events = column.events,
          align = column.align,
          attrs = column.attrs;

      var cellTitle = void 0;
      var cellStyle = {};
      var content = _utils2.default.get(row, dataField);

      var cellAttrs = _extends({}, _utils2.default.isFunction(attrs) ? attrs(content, row, rowIndex, columnIndex) : attrs, events);

      var cellClasses = _utils2.default.isFunction(classes) ? classes(content, row, rowIndex, columnIndex) : classes;

      if (style) {
        cellStyle = _utils2.default.isFunction(style) ? style(content, row, rowIndex, columnIndex) : style;
      }

      if (title) {
        cellTitle = _utils2.default.isFunction(title) ? title(content, row, rowIndex, columnIndex) : content;
        cellAttrs.title = cellTitle;
      }

      if (formatter) {
        content = column.formatter(content, row, rowIndex, formatExtraData);
      }

      if (align) {
        cellStyle.textAlign = _utils2.default.isFunction(align) ? align(content, row, rowIndex, columnIndex) : align;
      }

      if (cellClasses) cellAttrs.className = cellClasses;

      if (!_utils2.default.isEmptyObject(cellStyle)) cellAttrs.style = cellStyle;
      if (clickToEdit && editable) {
        cellAttrs.onClick = this.handleEditingCell;
      } else if (dbclickToEdit && editable) {
        cellAttrs.onDoubleClick = this.handleEditingCell;
      }
      return _react2.default.createElement(
        'td',
        cellAttrs,
        content
      );
    }
  }]);

  return Cell;
}(_react.Component);

Cell.propTypes = {
  row: _propTypes2.default.object.isRequired,
  rowIndex: _propTypes2.default.number.isRequired,
  column: _propTypes2.default.object.isRequired,
  columnIndex: _propTypes2.default.number.isRequired
};

exports.default = Cell;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 react/require-default-props: 0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 jsx-a11y/no-noninteractive-element-interactions: 0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */


var SelectionCell = function (_Component) {
  _inherits(SelectionCell, _Component);

  function SelectionCell() {
    _classCallCheck(this, SelectionCell);

    var _this = _possibleConstructorReturn(this, (SelectionCell.__proto__ || Object.getPrototypeOf(SelectionCell)).call(this));

    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }

  _createClass(SelectionCell, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      var selected = this.props.selected;


      return nextProps.selected !== selected;
    }
  }, {
    key: 'handleClick',
    value: function handleClick() {
      var _props = this.props,
          inputType = _props.mode,
          rowKey = _props.rowKey,
          selected = _props.selected,
          onRowSelect = _props.onRowSelect,
          disabled = _props.disabled,
          rowIndex = _props.rowIndex,
          clickToSelect = _props.clickToSelect;


      if (disabled) return;
      if (clickToSelect) return;

      var checked = inputType === _const2.default.ROW_SELECT_SINGLE ? true : !selected;

      onRowSelect(rowKey, checked, rowIndex);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          inputType = _props2.mode,
          selected = _props2.selected,
          disabled = _props2.disabled;


      return _react2.default.createElement(
        'td',
        { onClick: this.handleClick },
        _react2.default.createElement('input', {
          type: inputType,
          checked: selected,
          disabled: disabled
        })
      );
    }
  }]);

  return SelectionCell;
}(_react.Component);

SelectionCell.propTypes = {
  mode: _propTypes2.default.string.isRequired,
  rowKey: _propTypes2.default.any,
  selected: _propTypes2.default.bool,
  onRowSelect: _propTypes2.default.func,
  disabled: _propTypes2.default.bool,
  rowIndex: _propTypes2.default.number,
  clickToSelect: _propTypes2.default.bool
};
exports.default = SelectionCell;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var events = ['onClick', 'onMouseEnter', 'onMouseLeave'];

exports.default = function (ExtendBase) {
  return function (_ExtendBase) {
    _inherits(RowEventDelegater, _ExtendBase);

    function RowEventDelegater(props) {
      _classCallCheck(this, RowEventDelegater);

      var _this = _possibleConstructorReturn(this, (RowEventDelegater.__proto__ || Object.getPrototypeOf(RowEventDelegater)).call(this, props));

      _this.clickNum = 0;
      _this.createDefaultEventHandler = _this.createDefaultEventHandler.bind(_this);
      _this.createClickEventHandler = _this.createClickEventHandler.bind(_this);
      return _this;
    }

    _createClass(RowEventDelegater, [{
      key: 'createDefaultEventHandler',
      value: function createDefaultEventHandler(cb) {
        var _this2 = this;

        return function (e) {
          var _props = _this2.props,
              row = _props.row,
              rowIndex = _props.rowIndex;

          cb(e, row, rowIndex);
        };
      }
    }, {
      key: 'createClickEventHandler',
      value: function createClickEventHandler(cb) {
        var _this3 = this;

        return function (e) {
          var _props2 = _this3.props,
              row = _props2.row,
              selected = _props2.selected,
              keyField = _props2.keyField,
              selectable = _props2.selectable,
              rowIndex = _props2.rowIndex,
              _props2$selectRow = _props2.selectRow,
              onRowSelect = _props2$selectRow.onRowSelect,
              clickToEdit = _props2$selectRow.clickToEdit,
              _props2$cellEdit = _props2.cellEdit,
              mode = _props2$cellEdit.mode,
              DBCLICK_TO_CELL_EDIT = _props2$cellEdit.DBCLICK_TO_CELL_EDIT,
              DELAY_FOR_DBCLICK = _props2$cellEdit.DELAY_FOR_DBCLICK;


          var clickFn = function clickFn() {
            if (cb) {
              cb(e, row, rowIndex);
            }
            if (selectable) {
              var key = _utils2.default.get(row, keyField);
              onRowSelect(key, !selected, rowIndex);
            }
          };

          if (mode === DBCLICK_TO_CELL_EDIT && clickToEdit) {
            _this3.clickNum += 1;
            _utils2.default.debounce(function () {
              if (_this3.clickNum === 1) {
                clickFn();
              }
              _this3.clickNum = 0;
            }, DELAY_FOR_DBCLICK)();
          } else {
            clickFn();
          }
        };
      }
    }, {
      key: 'delegate',
      value: function delegate() {
        var _this4 = this;

        var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var newAttrs = {};
        if (this.props.selectRow && this.props.selectRow.clickToSelect) {
          newAttrs.onClick = this.createClickEventHandler(attrs.onClick);
        }
        Object.keys(attrs).forEach(function (attr) {
          if (!newAttrs[attr]) {
            if (events.includes(attr)) {
              newAttrs[attr] = _this4.createDefaultEventHandler(attrs[attr]);
            } else {
              newAttrs[attr] = attrs[attr];
            }
          }
        });
        return newAttrs;
      }
    }]);

    return RowEventDelegater;
  }(ExtendBase);
};

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RowSection = function RowSection(_ref) {
  var content = _ref.content,
      colSpan = _ref.colSpan;
  return _react2.default.createElement(
    'tr',
    null,
    _react2.default.createElement(
      'td',
      {
        'data-toggle': 'collapse',
        colSpan: colSpan,
        className: 'react-bs-table-no-data'
      },
      content
    )
  );
};

RowSection.propTypes = {
  content: _propTypes2.default.any,
  colSpan: _propTypes2.default.number
};

RowSection.defaultProps = {
  content: null,
  colSpan: 1
};

exports.default = RowSection;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _columnResolver = __webpack_require__(36);

var _columnResolver2 = _interopRequireDefault(_columnResolver);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = function (ExtendBase) {
  return function (_ColumnResolver) {
    _inherits(TableResolver, _ColumnResolver);

    function TableResolver() {
      _classCallCheck(this, TableResolver);

      return _possibleConstructorReturn(this, (TableResolver.__proto__ || Object.getPrototypeOf(TableResolver)).apply(this, arguments));
    }

    _createClass(TableResolver, [{
      key: 'validateProps',
      value: function validateProps() {
        var keyField = this.props.keyField;

        if (!keyField) {
          throw new Error('Please specify a field as key via keyField');
        }
        if (this.visibleColumnSize(false) <= 0) {
          throw new Error('No visible columns detected');
        }
      }
    }, {
      key: 'isEmpty',
      value: function isEmpty() {
        return this.props.data.length === 0;
      }

      /**
       * props resolver for cell selection
       * @param {Object} options - addtional options like callback which are about to merge into props
       *
       * @returns {Object} result - props for cell selections
       * @returns {String} result.mode - input type of row selection or disabled.
       */

    }, {
      key: 'resolveSelectRowProps',
      value: function resolveSelectRowProps(options) {
        var selectRow = this.props.selectRow;
        var ROW_SELECT_DISABLED = _const2.default.ROW_SELECT_DISABLED;


        if (_utils2.default.isDefined(selectRow)) {
          return _extends({}, selectRow, options);
        }

        return {
          mode: ROW_SELECT_DISABLED
        };
      }

      /**
       * props resolver for header cell selection
       * @param {Object} options - addtional options like callback which are about to merge into props
       *
       * @returns {Object} result - props for cell selections
       * @returns {String} result.mode - input type of row selection or disabled.
       * @returns {String} result.checkedStatus - checkbox status depending on selected rows counts
       */

    }, {
      key: 'resolveSelectRowPropsForHeader',
      value: function resolveSelectRowPropsForHeader() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var selectRow = this.props.selectRow;

        var allRowsSelected = options.allRowsSelected,
            _options$selected = options.selected,
            selected = _options$selected === undefined ? [] : _options$selected,
            rest = _objectWithoutProperties(options, ['allRowsSelected', 'selected']);

        var ROW_SELECT_DISABLED = _const2.default.ROW_SELECT_DISABLED,
            CHECKBOX_STATUS_CHECKED = _const2.default.CHECKBOX_STATUS_CHECKED,
            CHECKBOX_STATUS_INDETERMINATE = _const2.default.CHECKBOX_STATUS_INDETERMINATE,
            CHECKBOX_STATUS_UNCHECKED = _const2.default.CHECKBOX_STATUS_UNCHECKED;


        if (_utils2.default.isDefined(selectRow)) {
          var checkedStatus = void 0;

          // checkbox status depending on selected rows counts
          if (allRowsSelected) checkedStatus = CHECKBOX_STATUS_CHECKED;else if (selected.length === 0) checkedStatus = CHECKBOX_STATUS_UNCHECKED;else checkedStatus = CHECKBOX_STATUS_INDETERMINATE;

          return _extends({}, selectRow, rest, {
            checkedStatus: checkedStatus
          });
        }

        return {
          mode: ROW_SELECT_DISABLED
        };
      }
    }]);

    return TableResolver;
  }((0, _columnResolver2.default)(ExtendBase));
};

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = function (ExtendBase) {
  return function (_ExtendBase) {
    _inherits(ColumnResolver, _ExtendBase);

    function ColumnResolver() {
      _classCallCheck(this, ColumnResolver);

      return _possibleConstructorReturn(this, (ColumnResolver.__proto__ || Object.getPrototypeOf(ColumnResolver)).apply(this, arguments));
    }

    _createClass(ColumnResolver, [{
      key: "visibleColumnSize",
      value: function visibleColumnSize() {
        var includeSelectColumn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

        var columnLen = this.props.columns.filter(function (c) {
          return !c.hidden;
        }).length;
        if (!includeSelectColumn) return columnLen;
        if (this.props.selectRow && !this.props.selectRow.hideSelectColumn) {
          return columnLen + 1;
        }
        return columnLen;
      }
    }]);

    return ColumnResolver;
  }(ExtendBase);
};

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _store = __webpack_require__(38);

var _store2 = _interopRequireDefault(_store);

var _wrapper = __webpack_require__(40);

var _wrapper2 = _interopRequireDefault(_wrapper);

var _wrapper3 = __webpack_require__(41);

var _wrapper4 = _interopRequireDefault(_wrapper3);

var _remoteResolver2 = __webpack_require__(16);

var _remoteResolver3 = _interopRequireDefault(_remoteResolver2);

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-return-assign: 0 */
/* eslint react/prop-types: 0 */


var withDataStore = function withDataStore(Base) {
  return function (_remoteResolver) {
    _inherits(BootstrapTableContainer, _remoteResolver);

    function BootstrapTableContainer(props) {
      _classCallCheck(this, BootstrapTableContainer);

      var _this = _possibleConstructorReturn(this, (BootstrapTableContainer.__proto__ || Object.getPrototypeOf(BootstrapTableContainer)).call(this, props));

      _this.store = new _store2.default(props.keyField);
      _this.store.data = props.data;
      _this.wrapComponents();
      return _this;
    }

    _createClass(BootstrapTableContainer, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this.store.setAllData(nextProps.data);
      }
    }, {
      key: 'wrapComponents',
      value: function wrapComponents() {
        this.BaseComponent = Base;
        var _props = this.props,
            pagination = _props.pagination,
            columns = _props.columns,
            filter = _props.filter,
            selectRow = _props.selectRow,
            cellEdit = _props.cellEdit;

        if (pagination) {
          var wrapperFactory = pagination.wrapperFactory;

          this.BaseComponent = wrapperFactory(this.BaseComponent, {
            remoteResolver: _remoteResolver3.default
          });
        }

        if (columns.filter(function (col) {
          return col.sort;
        }).length > 0) {
          this.BaseComponent = (0, _wrapper2.default)(this.BaseComponent);
        }

        if (filter) {
          var _wrapperFactory = filter.wrapperFactory;

          this.BaseComponent = _wrapperFactory(this.BaseComponent, {
            _: _utils2.default,
            remoteResolver: _remoteResolver3.default
          });
        }

        if (cellEdit) {
          var _wrapperFactory2 = cellEdit.wrapperFactory;

          this.BaseComponent = _wrapperFactory2(this.BaseComponent, {
            _: _utils2.default,
            remoteResolver: _remoteResolver3.default
          });
        }

        if (selectRow) {
          this.BaseComponent = (0, _wrapper4.default)(this.BaseComponent);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var baseProps = _extends({}, this.props, {
          store: this.store
        });

        return _react2.default.createElement(this.BaseComponent, baseProps);
      }
    }]);

    return BootstrapTableContainer;
  }((0, _remoteResolver3.default)(_react.Component));
};

exports.default = withDataStore;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint no-underscore-dangle: 0 */


var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

var _sort = __webpack_require__(39);

var _rows = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Store = function () {
  function Store(keyField) {
    _classCallCheck(this, Store);

    this._data = [];
    this._filteredData = [];
    this._keyField = keyField;
    this._sortOrder = undefined;
    this._sortField = undefined;
    this._selected = [];
    this._filters = {};
    this._page = undefined;
    this._sizePerPage = undefined;
  }

  _createClass(Store, [{
    key: 'edit',
    value: function edit(rowId, dataField, newValue) {
      var row = (0, _rows.getRowByRowId)(this)(rowId);
      if (row) _utils2.default.set(row, dataField, newValue);
    }
  }, {
    key: 'setSort',
    value: function setSort(_ref, order, defaultOrder) {
      var dataField = _ref.dataField;

      this.sortOrder = (0, _sort.nextOrder)(this)(dataField, order, defaultOrder);
      this.sortField = dataField;
    }
  }, {
    key: 'sortBy',
    value: function sortBy(_ref2) {
      var sortFunc = _ref2.sortFunc;

      this.data = (0, _sort.sort)(this)(sortFunc);
    }
  }, {
    key: 'getAllData',
    value: function getAllData() {
      return this._data;
    }
  }, {
    key: 'setAllData',
    value: function setAllData(data) {
      this._data = data;
    }
  }, {
    key: 'data',
    get: function get() {
      if (Object.keys(this._filters).length > 0) {
        return this._filteredData;
      }
      return this._data;
    },
    set: function set(data) {
      if (Object.keys(this._filters).length > 0) {
        this._filteredData = data;
      } else {
        this._data = data ? JSON.parse(JSON.stringify(data)) : [];
      }
    }
  }, {
    key: 'filteredData',
    get: function get() {
      return this._filteredData;
    },
    set: function set(filteredData) {
      this._filteredData = filteredData;
    }
  }, {
    key: 'keyField',
    get: function get() {
      return this._keyField;
    },
    set: function set(keyField) {
      this._keyField = keyField;
    }
  }, {
    key: 'sortOrder',
    get: function get() {
      return this._sortOrder;
    },
    set: function set(sortOrder) {
      this._sortOrder = sortOrder;
    }
  }, {
    key: 'page',
    get: function get() {
      return this._page;
    },
    set: function set(page) {
      this._page = page;
    }
  }, {
    key: 'sizePerPage',
    get: function get() {
      return this._sizePerPage;
    },
    set: function set(sizePerPage) {
      this._sizePerPage = sizePerPage;
    }
  }, {
    key: 'sortField',
    get: function get() {
      return this._sortField;
    },
    set: function set(sortField) {
      this._sortField = sortField;
    }
  }, {
    key: 'selected',
    get: function get() {
      return this._selected;
    },
    set: function set(selected) {
      this._selected = selected;
    }
  }, {
    key: 'filters',
    get: function get() {
      return this._filters;
    },
    set: function set(filters) {
      this._filters = filters;
    }
  }]);

  return Store;
}();

exports.default = Store;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nextOrder = exports.sort = undefined;

var _utils = __webpack_require__(3);

var _utils2 = _interopRequireDefault(_utils);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /* eslint no-nested-ternary: 0 */
/* eslint no-lonely-if: 0 */
/* eslint no-underscore-dangle: 0 */


function comparator(a, b) {
  var result = void 0;
  if (typeof b === 'string') {
    result = b.localeCompare(a);
  } else {
    result = a > b ? -1 : a < b ? 1 : 0;
  }
  return result;
}

var sort = exports.sort = function sort(_ref) {
  var data = _ref.data,
      sortOrder = _ref.sortOrder,
      sortField = _ref.sortField;
  return function (sortFunc) {
    var _data = [].concat(_toConsumableArray(data));
    _data.sort(function (a, b) {
      var result = void 0;
      var valueA = _utils2.default.get(a, sortField);
      var valueB = _utils2.default.get(b, sortField);
      valueA = _utils2.default.isDefined(valueA) ? valueA : '';
      valueB = _utils2.default.isDefined(valueB) ? valueB : '';

      if (sortFunc) {
        result = sortFunc(valueA, valueB, sortOrder, sortField);
      } else {
        if (sortOrder === _const2.default.SORT_DESC) {
          result = comparator(valueA, valueB);
        } else {
          result = comparator(valueB, valueA);
        }
      }
      return result;
    });
    return _data;
  };
};

var nextOrder = exports.nextOrder = function nextOrder(store) {
  return function (field, order) {
    var defaultOrder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _const2.default.SORT_DESC;

    if (order) return order;

    if (field !== store.sortField) {
      return defaultOrder;
    }
    return store.sortOrder === _const2.default.SORT_DESC ? _const2.default.SORT_ASC : _const2.default.SORT_DESC;
  };
};

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _remoteResolver2 = __webpack_require__(16);

var _remoteResolver3 = _interopRequireDefault(_remoteResolver2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


exports.default = function (Base) {
  var _class, _temp;

  return _temp = _class = function (_remoteResolver) {
    _inherits(SortWrapper, _remoteResolver);

    function SortWrapper(props) {
      _classCallCheck(this, SortWrapper);

      var _this = _possibleConstructorReturn(this, (SortWrapper.__proto__ || Object.getPrototypeOf(SortWrapper)).call(this, props));

      _this.handleSort = _this.handleSort.bind(_this);
      return _this;
    }

    _createClass(SortWrapper, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        var _props = this.props,
            columns = _props.columns,
            defaultSorted = _props.defaultSorted,
            defaultSortDirection = _props.defaultSortDirection,
            store = _props.store;
        // defaultSorted is an array, it's ready to use as multi / single sort
        // when we start to support multi sort, please update following code to use array.forEach

        if (defaultSorted && defaultSorted.length > 0) {
          var dataField = defaultSorted[0].dataField;
          var order = defaultSorted[0].order;
          var column = columns.filter(function (col) {
            return col.dataField === dataField;
          });
          if (column.length > 0) {
            store.setSort(column[0], order, defaultSortDirection);

            if (column[0].onSort) {
              column[0].onSort(store.sortField, store.sortOrder);
            }

            if (this.isRemoteSort() || this.isRemotePagination()) {
              this.handleSortChange();
            } else {
              store.sortBy(column[0]);
            }
          }
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var sortedColumn = void 0;
        for (var i = 0; i < nextProps.columns.length; i += 1) {
          if (nextProps.columns[i].dataField === nextProps.store.sortField) {
            sortedColumn = nextProps.columns[i];
            break;
          }
        }
        if (sortedColumn && sortedColumn.sort) {
          nextProps.store.sortBy(sortedColumn);
        }
      }
    }, {
      key: 'handleSort',
      value: function handleSort(column) {
        var store = this.props.store;

        store.setSort(column, undefined, this.props.defaultSortDirection);

        if (column.onSort) {
          column.onSort(store.sortField, store.sortOrder);
        }

        if (this.isRemoteSort() || this.isRemotePagination()) {
          this.handleSortChange();
        } else {
          store.sortBy(column);
          this.forceUpdate();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Base, _extends({}, this.props, {
          onSort: this.handleSort,
          data: this.props.store.data
        }));
      }
    }]);

    return SortWrapper;
  }((0, _remoteResolver3.default)(_react.Component)), _class.propTypes = {
    store: _propTypes2.default.object.isRequired
  }, _temp;
};

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _selection = __webpack_require__(15);

var _rows = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-param-reassign: 0 */


exports.default = function (Base) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    _inherits(RowSelectionWrapper, _Component);

    function RowSelectionWrapper(props) {
      _classCallCheck(this, RowSelectionWrapper);

      var _this = _possibleConstructorReturn(this, (RowSelectionWrapper.__proto__ || Object.getPrototypeOf(RowSelectionWrapper)).call(this, props));

      _this.handleRowSelect = _this.handleRowSelect.bind(_this);
      _this.handleAllRowsSelect = _this.handleAllRowsSelect.bind(_this);

      props.store.selected = props.selectRow.selected || [];
      _this.state = {
        selectedRowKeys: props.store.selected
      };
      return _this;
    }

    _createClass(RowSelectionWrapper, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        nextProps.store.selected = nextProps.selectRow.selected || [];
        this.setState(function () {
          return {
            selectedRowKeys: nextProps.store.selected
          };
        });
      }

      /**
       * row selection handler
       * @param {String} rowKey - row key of what was selected.
       * @param {Boolean} checked - next checked status of input button.
       */

    }, {
      key: 'handleRowSelect',
      value: function handleRowSelect(rowKey, checked, rowIndex) {
        var _props = this.props,
            _props$selectRow = _props.selectRow,
            mode = _props$selectRow.mode,
            onSelect = _props$selectRow.onSelect,
            store = _props.store;
        var ROW_SELECT_SINGLE = _const2.default.ROW_SELECT_SINGLE;


        var currSelected = [].concat(_toConsumableArray(store.selected));

        if (mode === ROW_SELECT_SINGLE) {
          // when select mode is radio
          currSelected = [rowKey];
        } else if (checked) {
          // when select mode is checkbox
          currSelected.push(rowKey);
        } else {
          currSelected = currSelected.filter(function (value) {
            return value !== rowKey;
          });
        }

        store.selected = currSelected;

        if (onSelect) {
          var row = (0, _rows.getRowByRowId)(store)(rowKey);
          onSelect(row, checked, rowIndex);
        }

        this.setState(function () {
          return {
            selectedRowKeys: currSelected
          };
        });
      }

      /**
       * handle all rows selection on header cell by store.selected or given specific result.
       * @param {Boolean} option - customized result for all rows selection
       */

    }, {
      key: 'handleAllRowsSelect',
      value: function handleAllRowsSelect(option) {
        var _props2 = this.props,
            store = _props2.store,
            _props2$selectRow = _props2.selectRow,
            onSelectAll = _props2$selectRow.onSelectAll,
            nonSelectable = _props2$selectRow.nonSelectable;

        var selected = (0, _selection.isAnySelectedRow)(store)(nonSelectable);

        // set next status of all row selected by store.selected or customizing by user.
        var result = option || !selected;

        var currSelected = result ? (0, _selection.selectableKeys)(store)(nonSelectable) : (0, _selection.unSelectableKeys)(store)(nonSelectable);

        store.selected = currSelected;

        if (onSelectAll) {
          onSelectAll(result, (0, _selection.getSelectedRows)(store));
        }

        this.setState(function () {
          return {
            selectedRowKeys: currSelected
          };
        });
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Base, _extends({}, this.props, {
          onRowSelect: this.handleRowSelect,
          onAllRowsSelect: this.handleAllRowsSelect
        }));
      }
    }]);

    return RowSelectionWrapper;
  }(_react.Component), _class.propTypes = {
    store: _propTypes2.default.object.isRequired,
    selectRow: _propTypes2.default.object.isRequired
  }, _temp;
};

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCAyZDQyMjU0ZWM5ODljNDJjY2EyMiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9jb25zdC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9zdG9yZS9yb3dzLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3N0b3JlL3NlbGVjdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9wcm9wcy1yZXNvbHZlci9yZW1vdGUtcmVzb2x2ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9ib290c3RyYXAtdGFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvaGVhZGVyLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL2hlYWRlci1jZWxsLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3NvcnQvc3ltYm9sLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3NvcnQvY2FyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvcm93LXNlbGVjdGlvbi9zZWxlY3Rpb24taGVhZGVyLWNlbGwuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvY2FwdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9ib2R5LmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3Jvdy5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9jZWxsLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3Jvdy1zZWxlY3Rpb24vc2VsZWN0aW9uLWNlbGwuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvcm93LWV2ZW50LWRlbGVnYXRlci5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9yb3ctc2VjdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9wcm9wcy1yZXNvbHZlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9wcm9wcy1yZXNvbHZlci9jb2x1bW4tcmVzb2x2ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvY29udGFpbmVyLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3N0b3JlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3N0b3JlL3NvcnQuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvc29ydC93cmFwcGVyLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3Jvdy1zZWxlY3Rpb24vd3JhcHBlci5qcyJdLCJuYW1lcyI6WyJTT1JUX0FTQyIsIlNPUlRfREVTQyIsIlJPV19TRUxFQ1RfU0lOR0xFIiwiUk9XX1NFTEVDVF9NVUxUSVBMRSIsIlJPV19TRUxFQ1RfRElTQUJMRUQiLCJDSEVDS0JPWF9TVEFUVVNfQ0hFQ0tFRCIsIkNIRUNLQk9YX1NUQVRVU19JTkRFVEVSTUlOQVRFIiwiQ0hFQ0tCT1hfU1RBVFVTX1VOQ0hFQ0tFRCIsInNwbGl0TmVzdGVkIiwic3RyIiwiam9pbiIsInJlcGxhY2UiLCJzcGxpdCIsImdldCIsInRhcmdldCIsImZpZWxkIiwicGF0aEFycmF5IiwicmVzdWx0IiwicmVkdWNlIiwiY3VyciIsInBhdGgiLCJlIiwic2V0IiwidmFsdWUiLCJzYWZlIiwibGV2ZWwiLCJhIiwiYiIsIkVycm9yIiwibGVuZ3RoIiwiaXNGdW5jdGlvbiIsIm9iaiIsImlzT2JqZWN0IiwidHlwZSIsImNvbnN0cnVjdG9yIiwiT2JqZWN0IiwiaXNFbXB0eU9iamVjdCIsImhhc093blByb3BlcnR5IiwicHJvdG90eXBlIiwia2V5cyIsImkiLCJjYWxsIiwiaXNEZWZpbmVkIiwic2xlZXAiLCJmbiIsIm1zIiwic2V0VGltZW91dCIsImRlYm91bmNlIiwiZnVuYyIsIndhaXQiLCJpbW1lZGlhdGUiLCJ0aW1lb3V0IiwibGF0ZXIiLCJhcHBseSIsImNhbGxOb3ciLCJjbGVhclRpbWVvdXQiLCJhcHB5IiwibWF0Y2hSb3ciLCJrZXlGaWVsZCIsImlkIiwicm93IiwiZ2V0Um93QnlSb3dJZCIsImRhdGEiLCJmaW5kIiwiaXNTZWxlY3RlZEFsbCIsInNlbGVjdGVkIiwiaXNBbnlTZWxlY3RlZFJvdyIsInNraXBzIiwiZmlsdGVyIiwiaW5jbHVkZXMiLCJ4Iiwic2VsZWN0YWJsZUtleXMiLCJtYXAiLCJ1blNlbGVjdGFibGVLZXlzIiwiZ2V0U2VsZWN0ZWRSb3dzIiwic3RvcmUiLCJnZXRSb3ciLCJrIiwic3RhdGUiLCJwcm9wcyIsInBhZ2UiLCJzaXplUGVyUGFnZSIsImZpbHRlcnMiLCJzb3J0RmllbGQiLCJzb3J0T3JkZXIiLCJnZXRBbGxEYXRhIiwicmVtb3RlIiwicGFnaW5hdGlvbiIsInNvcnQiLCJjZWxsRWRpdCIsIm9uVGFibGVDaGFuZ2UiLCJnZXROZXdlc3RTdGF0ZSIsIm5ld1N0YXRlIiwiaXNSZW1vdGVQYWdpbmF0aW9uIiwib3B0aW9ucyIsInBhZ2VTdGFydEluZGV4Iiwicm93SWQiLCJkYXRhRmllbGQiLCJuZXdWYWx1ZSIsIkV4dGVuZEJhc2UiLCJCb290c3RyYXBUYWJsZSIsInZhbGlkYXRlUHJvcHMiLCJuZXh0UHJvcHMiLCJzZXRTdGF0ZSIsImxvYWRpbmciLCJvdmVybGF5IiwidGFibGUiLCJyZW5kZXJUYWJsZSIsIkxvYWRpbmdPdmVybGF5IiwiY29sdW1ucyIsImNsYXNzZXMiLCJzdHJpcGVkIiwiaG92ZXIiLCJib3JkZXJlZCIsImNvbmRlbnNlZCIsIm5vRGF0YUluZGljYXRpb24iLCJjYXB0aW9uIiwicm93U3R5bGUiLCJyb3dDbGFzc2VzIiwicm93RXZlbnRzIiwidGFibGVDbGFzcyIsImNlbGxTZWxlY3Rpb25JbmZvIiwicmVzb2x2ZVNlbGVjdFJvd1Byb3BzIiwib25Sb3dTZWxlY3QiLCJoZWFkZXJDZWxsU2VsZWN0aW9uSW5mbyIsInJlc29sdmVTZWxlY3RSb3dQcm9wc0ZvckhlYWRlciIsIm9uQWxsUm93c1NlbGVjdCIsImFsbFJvd3NTZWxlY3RlZCIsInRhYmxlQ2FwdGlvbiIsIm9uU29ydCIsIm9uRmlsdGVyIiwiaXNFbXB0eSIsInZpc2libGVDb2x1bW5TaXplIiwicHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsImFycmF5Iiwib25lT2ZUeXBlIiwiYm9vbCIsInNoYXBlIiwib2JqZWN0Iiwibm9kZSIsInNlbGVjdFJvdyIsIm1vZGUiLCJvbmVPZiIsImNsaWNrVG9TZWxlY3QiLCJjbGlja1RvRWRpdCIsIm9uU2VsZWN0Iiwib25TZWxlY3RBbGwiLCJzdHlsZSIsIm5vblNlbGVjdGFibGUiLCJiZ0NvbG9yIiwiaGlkZVNlbGVjdENvbHVtbiIsImRlZmF1bHRTb3J0ZWQiLCJhcnJheU9mIiwib3JkZXIiLCJkZWZhdWx0U29ydERpcmVjdGlvbiIsImRlZmF1bHRQcm9wcyIsIkhlYWRlciIsImNvbHVtbiIsImhpZGRlbiIsImN1cnJTb3J0IiwiaXNMYXN0U29ydGluZyIsIkhlYWRlckNlbGwiLCJpbmRleCIsInNvcnRpbmciLCJ0ZXh0IiwiaGVhZGVyVGl0bGUiLCJoZWFkZXJBbGlnbiIsImhlYWRlckZvcm1hdHRlciIsImhlYWRlckV2ZW50cyIsImhlYWRlckNsYXNzZXMiLCJoZWFkZXJTdHlsZSIsImhlYWRlckF0dHJzIiwiaGVhZGVyU29ydGluZ0NsYXNzZXMiLCJoZWFkZXJTb3J0aW5nU3R5bGUiLCJjZWxsQXR0cnMiLCJzb3J0U3ltYm9sIiwiZmlsdGVyRWxtIiwiY2VsbFN0eWxlIiwiY2VsbENsYXNzZXMiLCJ0aXRsZSIsInRleHRBbGlnbiIsImN1c3RvbUNsaWNrIiwib25DbGljayIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwic29ydEVsZW1lbnQiLCJmaWx0ZXJFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImZvcm1hdHRlciIsImZvcm1hdEV4dHJhRGF0YSIsImFueSIsImV2ZW50cyIsImFsaWduIiwiYXR0cnMiLCJzb3J0RnVuYyIsImVkaXRhYmxlIiwiZWRpdENlbGxTdHlsZSIsImVkaXRDZWxsQ2xhc3NlcyIsImVkaXRvclN0eWxlIiwiZWRpdG9yQ2xhc3NlcyIsInZhbGlkYXRvciIsImZpbHRlclZhbHVlIiwibnVtYmVyIiwiU29ydFN5bWJvbCIsIlNvcnRDYXJldCIsIm9yZGVyQ2xhc3MiLCJkcm9wdXAiLCJDaGVja0JveCIsImNoZWNrZWQiLCJpbmRldGVybWluYXRlIiwiaW5wdXQiLCJTZWxlY3Rpb25IZWFkZXJDZWxsIiwiaGFuZGxlQ2hlY2tCb3hDbGljayIsImJpbmQiLCJjaGVja2VkU3RhdHVzIiwiQ2FwdGlvbiIsIkJvZHkiLCJzZWxlY3RlZFJvd0tleXMiLCJjb250ZW50IiwiaW5kaWNhdGlvbiIsIm5vbkVkaXRhYmxlUm93cyIsImtleSIsImluZGV4T2YiLCJzZWxlY3RlZFN0eWxlIiwic2VsZWN0ZWRDbGFzc2VzIiwiYmFja2dyb3VuZENvbG9yIiwic2VsZWN0YWJsZSIsIlJvdyIsInJvd0luZGV4IiwiZWRpdGFibGVSb3ciLCJvblN0YXJ0IiwiRWRpdGluZ0NlbGwiLCJlZGl0aW5nUm93SWR4IiwicmlkeCIsImVkaXRpbmdDb2xJZHgiLCJjaWR4IiwiQ0xJQ0tfVE9fQ0VMTF9FRElUIiwiREJDTElDS19UT19DRUxMX0VESVQiLCJyZXN0IiwidHJBdHRycyIsImRlbGVnYXRlIiwiZWRpdENlbGxzdHlsZSIsImVkaXRDZWxsY2xhc3NlcyIsIkNlbGwiLCJoYW5kbGVFZGl0aW5nQ2VsbCIsImNvbHVtbkluZGV4IiwiZGJjbGlja1RvRWRpdCIsImN1c3RvbURiQ2xpY2siLCJvbkRvdWJsZUNsaWNrIiwiY2VsbFRpdGxlIiwiU2VsZWN0aW9uQ2VsbCIsImhhbmRsZUNsaWNrIiwiaW5wdXRUeXBlIiwicm93S2V5IiwiZGlzYWJsZWQiLCJjbGlja051bSIsImNyZWF0ZURlZmF1bHRFdmVudEhhbmRsZXIiLCJjcmVhdGVDbGlja0V2ZW50SGFuZGxlciIsImNiIiwiREVMQVlfRk9SX0RCQ0xJQ0siLCJjbGlja0ZuIiwibmV3QXR0cnMiLCJmb3JFYWNoIiwiYXR0ciIsIlJvd1NlY3Rpb24iLCJjb2xTcGFuIiwiaW5jbHVkZVNlbGVjdENvbHVtbiIsImNvbHVtbkxlbiIsImMiLCJ3aXRoRGF0YVN0b3JlIiwid3JhcENvbXBvbmVudHMiLCJzZXRBbGxEYXRhIiwiQmFzZUNvbXBvbmVudCIsIkJhc2UiLCJ3cmFwcGVyRmFjdG9yeSIsInJlbW90ZVJlc29sdmVyIiwiY29sIiwiXyIsImJhc2VQcm9wcyIsIlN0b3JlIiwiX2RhdGEiLCJfZmlsdGVyZWREYXRhIiwiX2tleUZpZWxkIiwiX3NvcnRPcmRlciIsInVuZGVmaW5lZCIsIl9zb3J0RmllbGQiLCJfc2VsZWN0ZWQiLCJfZmlsdGVycyIsIl9wYWdlIiwiX3NpemVQZXJQYWdlIiwiZGVmYXVsdE9yZGVyIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiZmlsdGVyZWREYXRhIiwiY29tcGFyYXRvciIsImxvY2FsZUNvbXBhcmUiLCJ2YWx1ZUEiLCJ2YWx1ZUIiLCJuZXh0T3JkZXIiLCJoYW5kbGVTb3J0Iiwic2V0U29ydCIsImlzUmVtb3RlU29ydCIsImhhbmRsZVNvcnRDaGFuZ2UiLCJzb3J0QnkiLCJzb3J0ZWRDb2x1bW4iLCJmb3JjZVVwZGF0ZSIsImhhbmRsZVJvd1NlbGVjdCIsImhhbmRsZUFsbFJvd3NTZWxlY3QiLCJjdXJyU2VsZWN0ZWQiLCJwdXNoIiwib3B0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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LEtBQWpCLEVBQXdCMkUsYUFBeEIsQ0FBakI7O0FBRUE7QUFDQSxZQUFNckksU0FBU3dTLFVBQVUsQ0FBQ3hQLFFBQTFCOztBQUVBLFlBQU1zUCxlQUFldFMsU0FDbkIsK0JBQWUwRCxLQUFmLEVBQXNCMkUsYUFBdEIsQ0FEbUIsR0FFbkIsaUNBQWlCM0UsS0FBakIsRUFBd0IyRSxhQUF4QixDQUZGOztBQUtBM0UsY0FBTVYsUUFBTixHQUFpQnNQLFlBQWpCOztBQUVBLFlBQUluSyxXQUFKLEVBQWlCO0FBQ2ZBLHNCQUFZbkksTUFBWixFQUFvQixnQ0FBZ0IwRCxLQUFoQixDQUFwQjtBQUNEOztBQUVELGFBQUs0QixRQUFMLENBQWM7QUFBQSxpQkFBTztBQUNuQm9ILDZCQUFpQjRGO0FBREUsV0FBUDtBQUFBLFNBQWQ7QUFHRDtBQXBGVTtBQUFBO0FBQUEsK0JBc0ZGO0FBQ1AsZUFDRSw4QkFBQyxJQUFELGVBQ08sS0FBS3hPLEtBRFo7QUFFRSx1QkFBYyxLQUFLc08sZUFGckI7QUFHRSwyQkFBa0IsS0FBS0M7QUFIekIsV0FERjtBQU9EO0FBOUZVOztBQUFBO0FBQUEsOEJBRUpqTCxTQUZJLEdBRVE7QUFDakIxRCxXQUFPLG9CQUFVaUUsTUFBVixDQUFpQkwsVUFEUDtBQUVqQk8sZUFBVyxvQkFBVUYsTUFBVixDQUFpQkw7QUFGWCxHQUZSO0FBQUEsQyIsImZpbGUiOiJyZWFjdC1ib290c3RyYXAtdGFibGUyL2Rpc3QvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZShcInJlYWN0XCIpKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtcInJlYWN0XCJdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcIlJlYWN0Qm9vdHN0cmFwVGFibGVcIl0gPSBmYWN0b3J5KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cdGVsc2Vcblx0XHRyb290W1wiUmVhY3RCb290c3RyYXBUYWJsZVwiXSA9IGZhY3Rvcnkocm9vdFtcIlJlYWN0XCJdKTtcbn0pKHRoaXMsIGZ1bmN0aW9uKF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMF9fKSB7XG5yZXR1cm4gXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwge1xuIFx0XHRcdFx0Y29uZmlndXJhYmxlOiBmYWxzZSxcbiBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4gXHRcdFx0XHRnZXQ6IGdldHRlclxuIFx0XHRcdH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIxKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCAyZDQyMjU0ZWM5ODljNDJjY2EyMiIsIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8wX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifVxuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUgNiA3IDggOSIsImV4cG9ydCBkZWZhdWx0IHtcbiAgU09SVF9BU0M6ICdhc2MnLFxuICBTT1JUX0RFU0M6ICdkZXNjJyxcbiAgUk9XX1NFTEVDVF9TSU5HTEU6ICdyYWRpbycsXG4gIFJPV19TRUxFQ1RfTVVMVElQTEU6ICdjaGVja2JveCcsXG4gIFJPV19TRUxFQ1RfRElTQUJMRUQ6ICdST1dfU0VMRUNUX0RJU0FCTEVEJyxcbiAgQ0hFQ0tCT1hfU1RBVFVTX0NIRUNLRUQ6ICdjaGVja2VkJyxcbiAgQ0hFQ0tCT1hfU1RBVFVTX0lOREVURVJNSU5BVEU6ICdpbmRldGVybWluYXRlJyxcbiAgQ0hFQ0tCT1hfU1RBVFVTX1VOQ0hFQ0tFRDogJ3VuY2hlY2tlZCdcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9jb25zdC5qcyIsIi8qIGVzbGludCBuby1lbXB0eTogMCAqL1xuLyogZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOiAwICovXG4vKiBlc2xpbnQgcHJlZmVyLXJlc3QtcGFyYW1zOiAwICovXG5cbmZ1bmN0aW9uIHNwbGl0TmVzdGVkKHN0cikge1xuICByZXR1cm4gW3N0cl1cbiAgICAuam9pbignLicpXG4gICAgLnJlcGxhY2UoL1xcWy9nLCAnLicpXG4gICAgLnJlcGxhY2UoL1xcXS9nLCAnJylcbiAgICAuc3BsaXQoJy4nKTtcbn1cblxuZnVuY3Rpb24gZ2V0KHRhcmdldCwgZmllbGQpIHtcbiAgY29uc3QgcGF0aEFycmF5ID0gc3BsaXROZXN0ZWQoZmllbGQpO1xuICBsZXQgcmVzdWx0O1xuICB0cnkge1xuICAgIHJlc3VsdCA9IHBhdGhBcnJheS5yZWR1Y2UoKGN1cnIsIHBhdGgpID0+IGN1cnJbcGF0aF0sIHRhcmdldCk7XG4gIH0gY2F0Y2ggKGUpIHt9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIHNldCh0YXJnZXQsIGZpZWxkLCB2YWx1ZSwgc2FmZSA9IGZhbHNlKSB7XG4gIGNvbnN0IHBhdGhBcnJheSA9IHNwbGl0TmVzdGVkKGZpZWxkKTtcbiAgbGV0IGxldmVsID0gMDtcbiAgcGF0aEFycmF5LnJlZHVjZSgoYSwgYikgPT4ge1xuICAgIGxldmVsICs9IDE7XG4gICAgaWYgKHR5cGVvZiBhW2JdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgaWYgKCFzYWZlKSB0aHJvdyBuZXcgRXJyb3IoYCR7YX0uJHtifSBpcyB1bmRlZmluZWRgKTtcbiAgICAgIGFbYl0gPSB7fTtcbiAgICAgIHJldHVybiBhW2JdO1xuICAgIH1cblxuICAgIGlmIChsZXZlbCA9PT0gcGF0aEFycmF5Lmxlbmd0aCkge1xuICAgICAgYVtiXSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gYVtiXTtcbiAgfSwgdGFyZ2V0KTtcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbihvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiAodHlwZW9mIG9iaiA9PT0gJ2Z1bmN0aW9uJyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlIE9iamVjdC4gdGhlIGBPYmplY3RgIGV4Y2VwdCBgRnVuY3Rpb25gIGFuZCBgQXJyYXkuYFxuICpcbiAqIEBwYXJhbSB7Kn0gb2JqIC0gVGhlIHZhbHVlIGdvbm5hIGNoZWNrXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KG9iaikge1xuICBjb25zdCB0eXBlID0gdHlwZW9mIG9iajtcbiAgcmV0dXJuIG9iaiAhPT0gbnVsbCAmJiB0eXBlID09PSAnb2JqZWN0JyAmJiBvYmouY29uc3RydWN0b3IgPT09IE9iamVjdDtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eU9iamVjdChvYmopIHtcbiAgaWYgKCFpc09iamVjdChvYmopKSByZXR1cm4gZmFsc2U7XG5cbiAgY29uc3QgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleXNbaV0pKSByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gaXNEZWZpbmVkKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnICYmIHZhbHVlICE9PSBudWxsO1xufVxuXG5mdW5jdGlvbiBzbGVlcChmbiwgbXMpIHtcbiAgcmV0dXJuIHNldFRpbWVvdXQoKCkgPT4gZm4oKSwgbXMpO1xufVxuXG5mdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBpbW1lZGlhdGUpIHtcbiAgbGV0IHRpbWVvdXQ7XG5cbiAgcmV0dXJuICgpID0+IHtcbiAgICBjb25zdCBsYXRlciA9ICgpID0+IHtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuXG4gICAgICBpZiAoIWltbWVkaWF0ZSkge1xuICAgICAgICBmdW5jLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGNhbGxOb3cgPSBpbW1lZGlhdGUgJiYgIXRpbWVvdXQ7XG5cbiAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQgfHwgMCk7XG5cbiAgICBpZiAoY2FsbE5vdykge1xuICAgICAgZnVuYy5hcHB5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGdldCxcbiAgc2V0LFxuICBpc0Z1bmN0aW9uLFxuICBpc09iamVjdCxcbiAgaXNFbXB0eU9iamVjdCxcbiAgaXNEZWZpbmVkLFxuICBzbGVlcCxcbiAgZGVib3VuY2Vcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy91dGlscy5qcyIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCdmYmpzL2xpYi9lbXB0eUZ1bmN0aW9uJyk7XG52YXIgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaW52YXJpYW50KFxuICAgICAgZmFsc2UsXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDQgNSA2IDcgOCA5IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxuZnVuY3Rpb24gbWFrZUVtcHR5RnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGFyZztcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgYW5kIGRpc2NhcmRzIGlucHV0czsgaXQgaGFzIG5vIHNpZGUgZWZmZWN0cy4gVGhpcyBpc1xuICogcHJpbWFyaWx5IHVzZWZ1bCBpZGlvbWF0aWNhbGx5IGZvciBvdmVycmlkYWJsZSBmdW5jdGlvbiBlbmRwb2ludHMgd2hpY2hcbiAqIGFsd2F5cyBuZWVkIHRvIGJlIGNhbGxhYmxlLCBzaW5jZSBKUyBsYWNrcyBhIG51bGwtY2FsbCBpZGlvbSBhbGEgQ29jb2EuXG4gKi9cbnZhciBlbXB0eUZ1bmN0aW9uID0gZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9O1xuXG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zID0gbWFrZUVtcHR5RnVuY3Rpb247XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zRmFsc2UgPSBtYWtlRW1wdHlGdW5jdGlvbihmYWxzZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVHJ1ZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKHRydWUpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGwgPSBtYWtlRW1wdHlGdW5jdGlvbihudWxsKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUaGlzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcztcbn07XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zQXJndW1lbnQgPSBmdW5jdGlvbiAoYXJnKSB7XG4gIHJldHVybiBhcmc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5RnVuY3Rpb247XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUgNiA3IDggOSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanNcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1IDYgNyA4IDkiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUgNiA3IDggOSIsIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTYgSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzICgpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKSk7XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIlxuZXhwb3J0IGNvbnN0IG1hdGNoUm93ID0gKGtleUZpZWxkLCBpZCkgPT4gcm93ID0+IHJvd1trZXlGaWVsZF0gPT09IGlkO1xuXG5leHBvcnQgY29uc3QgZ2V0Um93QnlSb3dJZCA9ICh7IGRhdGEsIGtleUZpZWxkIH0pID0+IGlkID0+IGRhdGEuZmluZChtYXRjaFJvdyhrZXlGaWVsZCwgaWQpKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3N0b3JlL3Jvd3MuanMiLCJpbXBvcnQgXyBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBnZXRSb3dCeVJvd0lkIH0gZnJvbSAnLi9yb3dzJztcblxuZXhwb3J0IGNvbnN0IGlzU2VsZWN0ZWRBbGwgPSAoeyBkYXRhLCBzZWxlY3RlZCB9KSA9PiBkYXRhLmxlbmd0aCA9PT0gc2VsZWN0ZWQubGVuZ3RoO1xuXG5leHBvcnQgY29uc3QgaXNBbnlTZWxlY3RlZFJvdyA9ICh7IHNlbGVjdGVkIH0pID0+IChza2lwcyA9IFtdKSA9PiB7XG4gIGlmIChza2lwcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gc2VsZWN0ZWQubGVuZ3RoID4gMDtcbiAgfVxuICByZXR1cm4gc2VsZWN0ZWQuZmlsdGVyKHggPT4gIXNraXBzLmluY2x1ZGVzKHgpKS5sZW5ndGg7XG59O1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0YWJsZUtleXMgPSAoeyBkYXRhLCBrZXlGaWVsZCB9KSA9PiAoc2tpcHMgPSBbXSkgPT4ge1xuICBpZiAoc2tpcHMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGRhdGEubWFwKHJvdyA9PiBfLmdldChyb3csIGtleUZpZWxkKSk7XG4gIH1cbiAgcmV0dXJuIGRhdGFcbiAgICAuZmlsdGVyKHJvdyA9PiAhc2tpcHMuaW5jbHVkZXMoXy5nZXQocm93LCBrZXlGaWVsZCkpKVxuICAgIC5tYXAocm93ID0+IF8uZ2V0KHJvdywga2V5RmllbGQpKTtcbn07XG5cbmV4cG9ydCBjb25zdCB1blNlbGVjdGFibGVLZXlzID0gKHsgc2VsZWN0ZWQgfSkgPT4gKHNraXBzID0gW10pID0+IHtcbiAgaWYgKHNraXBzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICByZXR1cm4gc2VsZWN0ZWQuZmlsdGVyKHggPT4gc2tpcHMuaW5jbHVkZXMoeCkpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFNlbGVjdGVkUm93cyA9IChzdG9yZSkgPT4ge1xuICBjb25zdCBnZXRSb3cgPSBnZXRSb3dCeVJvd0lkKHN0b3JlKTtcbiAgcmV0dXJuIHN0b3JlLnNlbGVjdGVkLm1hcChrID0+IGdldFJvdyhrKSk7XG59O1xuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9zdG9yZS9zZWxlY3Rpb24uanMiLCJpbXBvcnQgXyBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IEV4dGVuZEJhc2UgPT5cbiAgY2xhc3MgUmVtb3RlUmVzb2x2ZXIgZXh0ZW5kcyBFeHRlbmRCYXNlIHtcbiAgICBnZXROZXdlc3RTdGF0ZShzdGF0ZSA9IHt9KSB7XG4gICAgICBjb25zdCBzdG9yZSA9IHRoaXMuc3RvcmUgfHwgdGhpcy5wcm9wcy5zdG9yZTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhZ2U6IHN0b3JlLnBhZ2UsXG4gICAgICAgIHNpemVQZXJQYWdlOiBzdG9yZS5zaXplUGVyUGFnZSxcbiAgICAgICAgZmlsdGVyczogc3RvcmUuZmlsdGVycyxcbiAgICAgICAgc29ydEZpZWxkOiBzdG9yZS5zb3J0RmllbGQsXG4gICAgICAgIHNvcnRPcmRlcjogc3RvcmUuc29ydE9yZGVyLFxuICAgICAgICBkYXRhOiBzdG9yZS5nZXRBbGxEYXRhKCksXG4gICAgICAgIC4uLnN0YXRlXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlzUmVtb3RlUGFnaW5hdGlvbigpIHtcbiAgICAgIGNvbnN0IHsgcmVtb3RlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIHJlbW90ZSA9PT0gdHJ1ZSB8fCAoXy5pc09iamVjdChyZW1vdGUpICYmIHJlbW90ZS5wYWdpbmF0aW9uKTtcbiAgICB9XG5cbiAgICBpc1JlbW90ZUZpbHRlcmluZygpIHtcbiAgICAgIGNvbnN0IHsgcmVtb3RlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIHJlbW90ZSA9PT0gdHJ1ZSB8fCAoXy5pc09iamVjdChyZW1vdGUpICYmIHJlbW90ZS5maWx0ZXIpO1xuICAgIH1cblxuICAgIGlzUmVtb3RlU29ydCgpIHtcbiAgICAgIGNvbnN0IHsgcmVtb3RlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIHJlbW90ZSA9PT0gdHJ1ZSB8fCAoXy5pc09iamVjdChyZW1vdGUpICYmIHJlbW90ZS5zb3J0KTtcbiAgICB9XG5cbiAgICBpc1JlbW90ZUNlbGxFZGl0KCkge1xuICAgICAgY29uc3QgeyByZW1vdGUgfSA9IHRoaXMucHJvcHM7XG4gICAgICByZXR1cm4gcmVtb3RlID09PSB0cnVlIHx8IChfLmlzT2JqZWN0KHJlbW90ZSkgJiYgcmVtb3RlLmNlbGxFZGl0KTtcbiAgICB9XG5cbiAgICBoYW5kbGVSZW1vdGVQYWdlQ2hhbmdlKCkge1xuICAgICAgdGhpcy5wcm9wcy5vblRhYmxlQ2hhbmdlKCdwYWdpbmF0aW9uJywgdGhpcy5nZXROZXdlc3RTdGF0ZSgpKTtcbiAgICB9XG5cbiAgICBoYW5kbGVSZW1vdGVGaWx0ZXJDaGFuZ2UoKSB7XG4gICAgICBjb25zdCBuZXdTdGF0ZSA9IHt9O1xuICAgICAgaWYgKHRoaXMuaXNSZW1vdGVQYWdpbmF0aW9uKCkpIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHRoaXMucHJvcHMucGFnaW5hdGlvbi5vcHRpb25zIHx8IHt9O1xuICAgICAgICBuZXdTdGF0ZS5wYWdlID0gXy5pc0RlZmluZWQob3B0aW9ucy5wYWdlU3RhcnRJbmRleCkgPyBvcHRpb25zLnBhZ2VTdGFydEluZGV4IDogMTtcbiAgICAgIH1cbiAgICAgIHRoaXMucHJvcHMub25UYWJsZUNoYW5nZSgnZmlsdGVyJywgdGhpcy5nZXROZXdlc3RTdGF0ZShuZXdTdGF0ZSkpO1xuICAgIH1cblxuICAgIGhhbmRsZVNvcnRDaGFuZ2UoKSB7XG4gICAgICB0aGlzLnByb3BzLm9uVGFibGVDaGFuZ2UoJ3NvcnQnLCB0aGlzLmdldE5ld2VzdFN0YXRlKCkpO1xuICAgIH1cblxuICAgIGhhbmRsZUNlbGxDaGFuZ2Uocm93SWQsIGRhdGFGaWVsZCwgbmV3VmFsdWUpIHtcbiAgICAgIGNvbnN0IGNlbGxFZGl0ID0geyByb3dJZCwgZGF0YUZpZWxkLCBuZXdWYWx1ZSB9O1xuICAgICAgdGhpcy5wcm9wcy5vblRhYmxlQ2hhbmdlKCdjZWxsRWRpdCcsIHRoaXMuZ2V0TmV3ZXN0U3RhdGUoeyBjZWxsRWRpdCB9KSk7XG4gICAgfVxuICB9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvcHJvcHMtcmVzb2x2ZXIvcmVtb3RlLXJlc29sdmVyLmpzIiwiaW1wb3J0IEJvb3RzdHJhcFRhYmxlIGZyb20gJy4vc3JjL2Jvb3RzdHJhcC10YWJsZSc7XG5pbXBvcnQgd2l0aERhdGFTdG9yZSBmcm9tICcuL3NyYy9jb250YWluZXInO1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoRGF0YVN0b3JlKEJvb3RzdHJhcFRhYmxlKTtcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9pbmRleC5qcyIsIi8qIGVzbGludCBhcnJvdy1ib2R5LXN0eWxlOiAwICovXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgSGVhZGVyIGZyb20gJy4vaGVhZGVyJztcbmltcG9ydCBDYXB0aW9uIGZyb20gJy4vY2FwdGlvbic7XG5pbXBvcnQgQm9keSBmcm9tICcuL2JvZHknO1xuaW1wb3J0IFByb3BzQmFzZVJlc29sdmVyIGZyb20gJy4vcHJvcHMtcmVzb2x2ZXInO1xuaW1wb3J0IENvbnN0IGZyb20gJy4vY29uc3QnO1xuaW1wb3J0IHsgaXNTZWxlY3RlZEFsbCB9IGZyb20gJy4vc3RvcmUvc2VsZWN0aW9uJztcblxuY2xhc3MgQm9vdHN0cmFwVGFibGUgZXh0ZW5kcyBQcm9wc0Jhc2VSZXNvbHZlcihDb21wb25lbnQpIHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy52YWxpZGF0ZVByb3BzKCk7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgZGF0YTogcHJvcHMuZGF0YVxuICAgIH07XG4gIH1cblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZGF0YTogbmV4dFByb3BzLmRhdGFcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcsIG92ZXJsYXkgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgdGFibGUgPSB0aGlzLnJlbmRlclRhYmxlKCk7XG4gICAgaWYgKGxvYWRpbmcgJiYgb3ZlcmxheSkge1xuICAgICAgY29uc3QgTG9hZGluZ092ZXJsYXkgPSBvdmVybGF5KHRhYmxlLCBsb2FkaW5nKTtcbiAgICAgIHJldHVybiA8TG9hZGluZ092ZXJsYXkgLz47XG4gICAgfVxuICAgIHJldHVybiB0YWJsZTtcbiAgfVxuXG4gIHJlbmRlclRhYmxlKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHN0b3JlLFxuICAgICAgY29sdW1ucyxcbiAgICAgIGtleUZpZWxkLFxuICAgICAgaWQsXG4gICAgICBjbGFzc2VzLFxuICAgICAgc3RyaXBlZCxcbiAgICAgIGhvdmVyLFxuICAgICAgYm9yZGVyZWQsXG4gICAgICBjb25kZW5zZWQsXG4gICAgICBub0RhdGFJbmRpY2F0aW9uLFxuICAgICAgY2FwdGlvbixcbiAgICAgIHJvd1N0eWxlLFxuICAgICAgcm93Q2xhc3NlcyxcbiAgICAgIHJvd0V2ZW50c1xuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgdGFibGVDbGFzcyA9IGNzKCd0YWJsZScsIHtcbiAgICAgICd0YWJsZS1zdHJpcGVkJzogc3RyaXBlZCxcbiAgICAgICd0YWJsZS1ob3Zlcic6IGhvdmVyLFxuICAgICAgJ3RhYmxlLWJvcmRlcmVkJzogYm9yZGVyZWQsXG4gICAgICAndGFibGUtY29uZGVuc2VkJzogY29uZGVuc2VkXG4gICAgfSwgY2xhc3Nlcyk7XG5cbiAgICBjb25zdCBjZWxsU2VsZWN0aW9uSW5mbyA9IHRoaXMucmVzb2x2ZVNlbGVjdFJvd1Byb3BzKHtcbiAgICAgIG9uUm93U2VsZWN0OiB0aGlzLnByb3BzLm9uUm93U2VsZWN0XG4gICAgfSk7XG5cbiAgICBjb25zdCBoZWFkZXJDZWxsU2VsZWN0aW9uSW5mbyA9IHRoaXMucmVzb2x2ZVNlbGVjdFJvd1Byb3BzRm9ySGVhZGVyKHtcbiAgICAgIG9uQWxsUm93c1NlbGVjdDogdGhpcy5wcm9wcy5vbkFsbFJvd3NTZWxlY3QsXG4gICAgICBzZWxlY3RlZDogc3RvcmUuc2VsZWN0ZWQsXG4gICAgICBhbGxSb3dzU2VsZWN0ZWQ6IGlzU2VsZWN0ZWRBbGwoc3RvcmUpXG4gICAgfSk7XG5cbiAgICBjb25zdCB0YWJsZUNhcHRpb24gPSAoY2FwdGlvbiAmJiA8Q2FwdGlvbj57IGNhcHRpb24gfTwvQ2FwdGlvbj4pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVhY3QtYm9vdHN0cmFwLXRhYmxlXCI+XG4gICAgICAgIDx0YWJsZSBpZD17IGlkIH0gY2xhc3NOYW1lPXsgdGFibGVDbGFzcyB9PlxuICAgICAgICAgIHsgdGFibGVDYXB0aW9uIH1cbiAgICAgICAgICA8SGVhZGVyXG4gICAgICAgICAgICBjb2x1bW5zPXsgY29sdW1ucyB9XG4gICAgICAgICAgICBzb3J0RmllbGQ9eyBzdG9yZS5zb3J0RmllbGQgfVxuICAgICAgICAgICAgc29ydE9yZGVyPXsgc3RvcmUuc29ydE9yZGVyIH1cbiAgICAgICAgICAgIG9uU29ydD17IHRoaXMucHJvcHMub25Tb3J0IH1cbiAgICAgICAgICAgIG9uRmlsdGVyPXsgdGhpcy5wcm9wcy5vbkZpbHRlciB9XG4gICAgICAgICAgICBzZWxlY3RSb3c9eyBoZWFkZXJDZWxsU2VsZWN0aW9uSW5mbyB9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8Qm9keVxuICAgICAgICAgICAgZGF0YT17IHRoaXMuc3RhdGUuZGF0YSB9XG4gICAgICAgICAgICBrZXlGaWVsZD17IGtleUZpZWxkIH1cbiAgICAgICAgICAgIGNvbHVtbnM9eyBjb2x1bW5zIH1cbiAgICAgICAgICAgIGlzRW1wdHk9eyB0aGlzLmlzRW1wdHkoKSB9XG4gICAgICAgICAgICB2aXNpYmxlQ29sdW1uU2l6ZT17IHRoaXMudmlzaWJsZUNvbHVtblNpemUoKSB9XG4gICAgICAgICAgICBub0RhdGFJbmRpY2F0aW9uPXsgbm9EYXRhSW5kaWNhdGlvbiB9XG4gICAgICAgICAgICBjZWxsRWRpdD17IHRoaXMucHJvcHMuY2VsbEVkaXQgfHwge30gfVxuICAgICAgICAgICAgc2VsZWN0Um93PXsgY2VsbFNlbGVjdGlvbkluZm8gfVxuICAgICAgICAgICAgc2VsZWN0ZWRSb3dLZXlzPXsgc3RvcmUuc2VsZWN0ZWQgfVxuICAgICAgICAgICAgcm93U3R5bGU9eyByb3dTdHlsZSB9XG4gICAgICAgICAgICByb3dDbGFzc2VzPXsgcm93Q2xhc3NlcyB9XG4gICAgICAgICAgICByb3dFdmVudHM9eyByb3dFdmVudHMgfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvdGFibGU+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbkJvb3RzdHJhcFRhYmxlLnByb3BUeXBlcyA9IHtcbiAga2V5RmllbGQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgZGF0YTogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIGNvbHVtbnM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICByZW1vdGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5ib29sLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHBhZ2luYXRpb246IFByb3BUeXBlcy5ib29sXG4gIH0pXSksXG4gIHN0b3JlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBub0RhdGFJbmRpY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pLFxuICBzdHJpcGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgYm9yZGVyZWQ6IFByb3BUeXBlcy5ib29sLFxuICBob3ZlcjogUHJvcFR5cGVzLmJvb2wsXG4gIGlkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjbGFzc2VzOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjb25kZW5zZWQ6IFByb3BUeXBlcy5ib29sLFxuICBjYXB0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICBQcm9wVHlwZXMubm9kZSxcbiAgICBQcm9wVHlwZXMuc3RyaW5nXG4gIF0pLFxuICBwYWdpbmF0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICBmaWx0ZXI6IFByb3BUeXBlcy5vYmplY3QsXG4gIGNlbGxFZGl0OiBQcm9wVHlwZXMub2JqZWN0LFxuICBzZWxlY3RSb3c6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgbW9kZTogUHJvcFR5cGVzLm9uZU9mKFtDb25zdC5ST1dfU0VMRUNUX1NJTkdMRSwgQ29uc3QuUk9XX1NFTEVDVF9NVUxUSVBMRV0pLmlzUmVxdWlyZWQsXG4gICAgY2xpY2tUb1NlbGVjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgY2xpY2tUb0VkaXQ6IFByb3BUeXBlcy5ib29sLFxuICAgIG9uU2VsZWN0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvblNlbGVjdEFsbDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgY2xhc3NlczogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgICBub25TZWxlY3RhYmxlOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgYmdDb2xvcjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgICBoaWRlU2VsZWN0Q29sdW1uOiBQcm9wVHlwZXMuYm9vbFxuICB9KSxcbiAgb25Sb3dTZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICBvbkFsbFJvd3NTZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICByb3dTdHlsZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgcm93RXZlbnRzOiBQcm9wVHlwZXMub2JqZWN0LFxuICByb3dDbGFzc2VzOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pLFxuICBkZWZhdWx0U29ydGVkOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGRhdGFGaWVsZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIG9yZGVyOiBQcm9wVHlwZXMub25lT2YoW0NvbnN0LlNPUlRfREVTQywgQ29uc3QuU09SVF9BU0NdKS5pc1JlcXVpcmVkXG4gIH0pKSxcbiAgZGVmYXVsdFNvcnREaXJlY3Rpb246IFByb3BUeXBlcy5vbmVPZihbQ29uc3QuU09SVF9ERVNDLCBDb25zdC5TT1JUX0FTQ10pLFxuICBvdmVybGF5OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25UYWJsZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU29ydDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRmlsdGVyOiBQcm9wVHlwZXMuZnVuY1xufTtcblxuQm9vdHN0cmFwVGFibGUuZGVmYXVsdFByb3BzID0ge1xuICByZW1vdGU6IGZhbHNlLFxuICBzdHJpcGVkOiBmYWxzZSxcbiAgYm9yZGVyZWQ6IHRydWUsXG4gIGhvdmVyOiBmYWxzZSxcbiAgY29uZGVuc2VkOiBmYWxzZSxcbiAgbm9EYXRhSW5kaWNhdGlvbjogbnVsbFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQm9vdHN0cmFwVGFibGU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9ib290c3RyYXAtdGFibGUuanMiLCIvKiBlc2xpbnQgcmVhY3QvcmVxdWlyZS1kZWZhdWx0LXByb3BzOiAwICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBDb25zdCBmcm9tICcuL2NvbnN0JztcblxuaW1wb3J0IEhlYWRlckNlbGwgZnJvbSAnLi9oZWFkZXItY2VsbCc7XG5pbXBvcnQgU2VsZWN0aW9uSGVhZGVyQ2VsbCBmcm9tICcuL3Jvdy1zZWxlY3Rpb24vc2VsZWN0aW9uLWhlYWRlci1jZWxsJztcblxuY29uc3QgSGVhZGVyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgUk9XX1NFTEVDVF9ESVNBQkxFRCB9ID0gQ29uc3Q7XG5cbiAgY29uc3Qge1xuICAgIGNvbHVtbnMsXG4gICAgb25Tb3J0LFxuICAgIG9uRmlsdGVyLFxuICAgIHNvcnRGaWVsZCxcbiAgICBzb3J0T3JkZXIsXG4gICAgc2VsZWN0Um93XG4gIH0gPSBwcm9wcztcblxuICByZXR1cm4gKFxuICAgIDx0aGVhZD5cbiAgICAgIDx0cj5cbiAgICAgICAge1xuICAgICAgICAgIChzZWxlY3RSb3cubW9kZSAhPT0gUk9XX1NFTEVDVF9ESVNBQkxFRCAmJiAhc2VsZWN0Um93LmhpZGVTZWxlY3RDb2x1bW4pXG4gICAgICAgICAgICA/IDxTZWxlY3Rpb25IZWFkZXJDZWxsIHsgLi4uc2VsZWN0Um93IH0gLz4gOiBudWxsXG4gICAgICAgIH1cbiAgICAgICAge1xuICAgICAgICAgIGNvbHVtbnMubWFwKChjb2x1bW4sIGkpID0+IHtcbiAgICAgICAgICAgIGlmICghY29sdW1uLmhpZGRlbikge1xuICAgICAgICAgICAgICBjb25zdCBjdXJyU29ydCA9IGNvbHVtbi5kYXRhRmllbGQgPT09IHNvcnRGaWVsZDtcbiAgICAgICAgICAgICAgY29uc3QgaXNMYXN0U29ydGluZyA9IGNvbHVtbi5kYXRhRmllbGQgPT09IHNvcnRGaWVsZDtcblxuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxIZWFkZXJDZWxsXG4gICAgICAgICAgICAgICAgICBpbmRleD17IGkgfVxuICAgICAgICAgICAgICAgICAga2V5PXsgY29sdW1uLmRhdGFGaWVsZCB9XG4gICAgICAgICAgICAgICAgICBjb2x1bW49eyBjb2x1bW4gfVxuICAgICAgICAgICAgICAgICAgb25Tb3J0PXsgb25Tb3J0IH1cbiAgICAgICAgICAgICAgICAgIHNvcnRpbmc9eyBjdXJyU29ydCB9XG4gICAgICAgICAgICAgICAgICBvbkZpbHRlcj17IG9uRmlsdGVyIH1cbiAgICAgICAgICAgICAgICAgIHNvcnRPcmRlcj17IHNvcnRPcmRlciB9XG4gICAgICAgICAgICAgICAgICBpc0xhc3RTb3J0aW5nPXsgaXNMYXN0U29ydGluZyB9XG4gICAgICAgICAgICAgICAgLz4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIDwvdHI+XG4gICAgPC90aGVhZD5cbiAgKTtcbn07XG5cbkhlYWRlci5wcm9wVHlwZXMgPSB7XG4gIGNvbHVtbnM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBvblNvcnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbkZpbHRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIHNvcnRGaWVsZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgc29ydE9yZGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzZWxlY3RSb3c6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL2hlYWRlci5qcyIsIi8qIGVzbGludCByZWFjdC9yZXF1aXJlLWRlZmF1bHQtcHJvcHM6IDAgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3MgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgQ29uc3QgZnJvbSAnLi9jb25zdCc7XG5pbXBvcnQgU29ydFN5bWJvbCBmcm9tICcuL3NvcnQvc3ltYm9sJztcbmltcG9ydCBTb3J0Q2FyZXQgZnJvbSAnLi9zb3J0L2NhcmV0JztcbmltcG9ydCBfIGZyb20gJy4vdXRpbHMnO1xuXG5cbmNvbnN0IEhlYWRlckNlbGwgPSAocHJvcHMpID0+IHtcbiAgY29uc3Qge1xuICAgIGNvbHVtbixcbiAgICBpbmRleCxcbiAgICBvblNvcnQsXG4gICAgc29ydGluZyxcbiAgICBzb3J0T3JkZXIsXG4gICAgaXNMYXN0U29ydGluZyxcbiAgICBvbkZpbHRlclxuICB9ID0gcHJvcHM7XG5cbiAgY29uc3Qge1xuICAgIHRleHQsXG4gICAgc29ydCxcbiAgICBmaWx0ZXIsXG4gICAgaGVhZGVyVGl0bGUsXG4gICAgaGVhZGVyQWxpZ24sXG4gICAgaGVhZGVyRm9ybWF0dGVyLFxuICAgIGhlYWRlckV2ZW50cyxcbiAgICBoZWFkZXJDbGFzc2VzLFxuICAgIGhlYWRlclN0eWxlLFxuICAgIGhlYWRlckF0dHJzLFxuICAgIGhlYWRlclNvcnRpbmdDbGFzc2VzLFxuICAgIGhlYWRlclNvcnRpbmdTdHlsZVxuICB9ID0gY29sdW1uO1xuXG4gIGNvbnN0IGNlbGxBdHRycyA9IHtcbiAgICAuLi5fLmlzRnVuY3Rpb24oaGVhZGVyQXR0cnMpID8gaGVhZGVyQXR0cnMoY29sdW1uLCBpbmRleCkgOiBoZWFkZXJBdHRycyxcbiAgICAuLi5oZWFkZXJFdmVudHNcbiAgfTtcblxuICBsZXQgc29ydFN5bWJvbDtcbiAgbGV0IGZpbHRlckVsbTtcbiAgbGV0IGNlbGxTdHlsZSA9IHt9O1xuICBsZXQgY2VsbENsYXNzZXMgPSBfLmlzRnVuY3Rpb24oaGVhZGVyQ2xhc3NlcykgPyBoZWFkZXJDbGFzc2VzKGNvbHVtbiwgaW5kZXgpIDogaGVhZGVyQ2xhc3NlcztcblxuICBpZiAoaGVhZGVyU3R5bGUpIHtcbiAgICBjZWxsU3R5bGUgPSBfLmlzRnVuY3Rpb24oaGVhZGVyU3R5bGUpID8gaGVhZGVyU3R5bGUoY29sdW1uLCBpbmRleCkgOiBoZWFkZXJTdHlsZTtcbiAgfVxuXG4gIGlmIChoZWFkZXJUaXRsZSkge1xuICAgIGNlbGxBdHRycy50aXRsZSA9IF8uaXNGdW5jdGlvbihoZWFkZXJUaXRsZSkgPyBoZWFkZXJUaXRsZShjb2x1bW4sIGluZGV4KSA6IHRleHQ7XG4gIH1cblxuICBpZiAoaGVhZGVyQWxpZ24pIHtcbiAgICBjZWxsU3R5bGUudGV4dEFsaWduID0gXy5pc0Z1bmN0aW9uKGhlYWRlckFsaWduKSA/IGhlYWRlckFsaWduKGNvbHVtbiwgaW5kZXgpIDogaGVhZGVyQWxpZ247XG4gIH1cblxuICBpZiAoc29ydCkge1xuICAgIGNvbnN0IGN1c3RvbUNsaWNrID0gY2VsbEF0dHJzLm9uQ2xpY2s7XG4gICAgY2VsbEF0dHJzLm9uQ2xpY2sgPSAoZSkgPT4ge1xuICAgICAgb25Tb3J0KGNvbHVtbik7XG4gICAgICBpZiAoXy5pc0Z1bmN0aW9uKGN1c3RvbUNsaWNrKSkgY3VzdG9tQ2xpY2soZSk7XG4gICAgfTtcbiAgICBjZWxsQXR0cnMuY2xhc3NOYW1lID0gY3MoY2VsbEF0dHJzLmNsYXNzTmFtZSwgJ3NvcnRhYmxlJyk7XG5cbiAgICBpZiAoc29ydGluZykge1xuICAgICAgc29ydFN5bWJvbCA9IDxTb3J0Q2FyZXQgb3JkZXI9eyBzb3J0T3JkZXIgfSAvPjtcblxuICAgICAgLy8gYXBwZW5kIGN1c3RvbWl6ZWQgY2xhc3NlcyBvciBzdHlsZSBpZiB0YWJsZSB3YXMgc29ydGluZyBiYXNlZCBvbiB0aGUgY3VycmVudCBjb2x1bW4uXG4gICAgICBjZWxsQ2xhc3NlcyA9IGNzKFxuICAgICAgICBjZWxsQ2xhc3NlcyxcbiAgICAgICAgXy5pc0Z1bmN0aW9uKGhlYWRlclNvcnRpbmdDbGFzc2VzKVxuICAgICAgICAgID8gaGVhZGVyU29ydGluZ0NsYXNzZXMoY29sdW1uLCBzb3J0T3JkZXIsIGlzTGFzdFNvcnRpbmcsIGluZGV4KVxuICAgICAgICAgIDogaGVhZGVyU29ydGluZ0NsYXNzZXNcbiAgICAgICk7XG5cbiAgICAgIGNlbGxTdHlsZSA9IHtcbiAgICAgICAgLi4uY2VsbFN0eWxlLFxuICAgICAgICAuLi5fLmlzRnVuY3Rpb24oaGVhZGVyU29ydGluZ1N0eWxlKVxuICAgICAgICAgID8gaGVhZGVyU29ydGluZ1N0eWxlKGNvbHVtbiwgc29ydE9yZGVyLCBpc0xhc3RTb3J0aW5nLCBpbmRleClcbiAgICAgICAgICA6IGhlYWRlclNvcnRpbmdTdHlsZVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgc29ydFN5bWJvbCA9IDxTb3J0U3ltYm9sIC8+O1xuICAgIH1cbiAgfVxuXG4gIGlmIChjZWxsQ2xhc3NlcykgY2VsbEF0dHJzLmNsYXNzTmFtZSA9IGNzKGNlbGxBdHRycy5jbGFzc05hbWUsIGNlbGxDbGFzc2VzKTtcbiAgaWYgKCFfLmlzRW1wdHlPYmplY3QoY2VsbFN0eWxlKSkgY2VsbEF0dHJzLnN0eWxlID0gY2VsbFN0eWxlO1xuICBpZiAoZmlsdGVyKSB7XG4gICAgZmlsdGVyRWxtID0gPGZpbHRlci5GaWx0ZXIgeyAuLi5maWx0ZXIucHJvcHMgfSBvbkZpbHRlcj17IG9uRmlsdGVyIH0gY29sdW1uPXsgY29sdW1uIH0gLz47XG4gIH1cblxuICBjb25zdCBjaGlsZHJlbiA9IGhlYWRlckZvcm1hdHRlciA/XG4gICAgaGVhZGVyRm9ybWF0dGVyKGNvbHVtbiwgaW5kZXgsIHsgc29ydEVsZW1lbnQ6IHNvcnRTeW1ib2wsIGZpbHRlckVsZW1lbnQ6IGZpbHRlckVsbSB9KSA6XG4gICAgdGV4dDtcblxuICBpZiAoaGVhZGVyRm9ybWF0dGVyKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ3RoJywgY2VsbEF0dHJzLCBjaGlsZHJlbik7XG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgndGgnLCBjZWxsQXR0cnMsIGNoaWxkcmVuLCBzb3J0U3ltYm9sLCBmaWx0ZXJFbG0pO1xufTtcblxuSGVhZGVyQ2VsbC5wcm9wVHlwZXMgPSB7XG4gIGNvbHVtbjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBkYXRhRmllbGQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgaGlkZGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBoZWFkZXJGb3JtYXR0ZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIGZvcm1hdHRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgZm9ybWF0RXh0cmFEYXRhOiBQcm9wVHlwZXMuYW55LFxuICAgIGhlYWRlckNsYXNzZXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgY2xhc3NlczogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgICBoZWFkZXJTdHlsZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgICBoZWFkZXJUaXRsZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmJvb2wsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgdGl0bGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5ib29sLCBQcm9wVHlwZXMuZnVuY10pLFxuICAgIGhlYWRlckV2ZW50czogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBldmVudHM6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgaGVhZGVyQWxpZ246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgYWxpZ246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgaGVhZGVyQXR0cnM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgYXR0cnM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgc29ydDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc29ydEZ1bmM6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uU29ydDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgZWRpdGFibGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5ib29sLCBQcm9wVHlwZXMuZnVuY10pLFxuICAgIGVkaXRDZWxsU3R5bGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgZWRpdENlbGxDbGFzc2VzOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pLFxuICAgIGVkaXRvclN0eWxlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuZnVuY10pLFxuICAgIGVkaXRvckNsYXNzZXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgdmFsaWRhdG9yOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBmaWx0ZXI6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgZmlsdGVyVmFsdWU6IFByb3BUeXBlcy5mdW5jXG4gIH0pLmlzUmVxdWlyZWQsXG4gIGluZGV4OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIG9uU29ydDogUHJvcFR5cGVzLmZ1bmMsXG4gIHNvcnRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBzb3J0T3JkZXI6IFByb3BUeXBlcy5vbmVPZihbQ29uc3QuU09SVF9BU0MsIENvbnN0LlNPUlRfREVTQ10pLFxuICBpc0xhc3RTb3J0aW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgb25GaWx0ZXI6IFByb3BUeXBlcy5mdW5jXG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXJDZWxsO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvaGVhZGVyLWNlbGwuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jb25zdCBTb3J0U3ltYm9sID0gKCkgPT4gKFxuICA8c3BhbiBjbGFzc05hbWU9XCJvcmRlclwiPlxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImRyb3Bkb3duXCI+XG4gICAgICA8c3BhbiBjbGFzc05hbWU9XCJjYXJldFwiIC8+XG4gICAgPC9zcGFuPlxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImRyb3B1cFwiPlxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2FyZXRcIiAvPlxuICAgIDwvc3Bhbj5cbiAgPC9zcGFuPik7XG5cbmV4cG9ydCBkZWZhdWx0IFNvcnRTeW1ib2w7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9zb3J0L3N5bWJvbC5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3MgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgQ29uc3QgZnJvbSAnLi4vY29uc3QnO1xuXG5jb25zdCBTb3J0Q2FyZXQgPSAoeyBvcmRlciB9KSA9PiB7XG4gIGNvbnN0IG9yZGVyQ2xhc3MgPSBjcygncmVhY3QtYm9vdHN0cmFwLXRhYmxlLXNvcnQtb3JkZXInLCB7XG4gICAgZHJvcHVwOiBvcmRlciA9PT0gQ29uc3QuU09SVF9BU0NcbiAgfSk7XG4gIHJldHVybiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPXsgb3JkZXJDbGFzcyB9PlxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2FyZXRcIiAvPlxuICAgIDwvc3Bhbj5cbiAgKTtcbn07XG5cblNvcnRDYXJldC5wcm9wVHlwZXMgPSB7XG4gIG9yZGVyOiBQcm9wVHlwZXMub25lT2YoW0NvbnN0LlNPUlRfQVNDLCBDb25zdC5TT1JUX0RFU0NdKS5pc1JlcXVpcmVkXG59O1xuZXhwb3J0IGRlZmF1bHQgU29ydENhcmV0O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvc29ydC9jYXJldC5qcyIsIi8qIGVzbGludCByZWFjdC9yZXF1aXJlLWRlZmF1bHQtcHJvcHM6IDAgKi9cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IENvbnN0IGZyb20gJy4uL2NvbnN0JztcblxuZXhwb3J0IGNvbnN0IENoZWNrQm94ID0gKHsgY2hlY2tlZCwgaW5kZXRlcm1pbmF0ZSB9KSA9PiAoXG4gIDxpbnB1dFxuICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgY2hlY2tlZD17IGNoZWNrZWQgfVxuICAgIHJlZj17IChpbnB1dCkgPT4ge1xuICAgICAgaWYgKGlucHV0KSBpbnB1dC5pbmRldGVybWluYXRlID0gaW5kZXRlcm1pbmF0ZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIH0gfVxuICAvPlxuKTtcblxuQ2hlY2tCb3gucHJvcFR5cGVzID0ge1xuICBjaGVja2VkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBpbmRldGVybWluYXRlOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWxlY3Rpb25IZWFkZXJDZWxsIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBtb2RlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgY2hlY2tlZFN0YXR1czogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBvbkFsbFJvd3NTZWxlY3Q6IFByb3BUeXBlcy5mdW5jXG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuaGFuZGxlQ2hlY2tCb3hDbGljayA9IHRoaXMuaGFuZGxlQ2hlY2tCb3hDbGljay5iaW5kKHRoaXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIGF2b2lkIHVwZGF0aW5nIGlmIGJ1dHRvbiBpc1xuICAgKiAxLiByYWRpb1xuICAgKiAyLiBzdGF0dXMgd2FzIG5vdCBjaGFuZ2VkLlxuICAgKi9cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcykge1xuICAgIGNvbnN0IHsgUk9XX1NFTEVDVF9TSU5HTEUgfSA9IENvbnN0O1xuICAgIGNvbnN0IHsgbW9kZSwgY2hlY2tlZFN0YXR1cyB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmIChtb2RlID09PSBST1dfU0VMRUNUX1NJTkdMRSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIG5leHRQcm9wcy5jaGVja2VkU3RhdHVzICE9PSBjaGVja2VkU3RhdHVzO1xuICB9XG5cbiAgaGFuZGxlQ2hlY2tCb3hDbGljaygpIHtcbiAgICBjb25zdCB7IG9uQWxsUm93c1NlbGVjdCB9ID0gdGhpcy5wcm9wcztcblxuICAgIG9uQWxsUm93c1NlbGVjdCgpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIENIRUNLQk9YX1NUQVRVU19DSEVDS0VELCBDSEVDS0JPWF9TVEFUVVNfSU5ERVRFUk1JTkFURSwgUk9XX1NFTEVDVF9TSU5HTEVcbiAgICB9ID0gQ29uc3Q7XG5cbiAgICBjb25zdCB7IG1vZGUsIGNoZWNrZWRTdGF0dXMgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBjaGVja2VkID0gY2hlY2tlZFN0YXR1cyA9PT0gQ0hFQ0tCT1hfU1RBVFVTX0NIRUNLRUQ7XG5cbiAgICBjb25zdCBpbmRldGVybWluYXRlID0gY2hlY2tlZFN0YXR1cyA9PT0gQ0hFQ0tCT1hfU1RBVFVTX0lOREVURVJNSU5BVEU7XG5cbiAgICByZXR1cm4gbW9kZSA9PT0gUk9XX1NFTEVDVF9TSU5HTEVcbiAgICAgID8gPHRoIGRhdGEtcm93LXNlbGVjdGlvbiAvPlxuICAgICAgOiAoXG4gICAgICAgIDx0aCBkYXRhLXJvdy1zZWxlY3Rpb24gb25DbGljaz17IHRoaXMuaGFuZGxlQ2hlY2tCb3hDbGljayB9PlxuICAgICAgICAgIDxDaGVja0JveFxuICAgICAgICAgICAgeyAuLi50aGlzLnByb3BzIH1cbiAgICAgICAgICAgIGNoZWNrZWQ9eyBjaGVja2VkIH1cbiAgICAgICAgICAgIGluZGV0ZXJtaW5hdGU9eyBpbmRldGVybWluYXRlIH1cbiAgICAgICAgICAvPlxuICAgICAgICA8L3RoPlxuICAgICAgKTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvcm93LXNlbGVjdGlvbi9zZWxlY3Rpb24taGVhZGVyLWNlbGwuanMiLCIvKiBlc2xpbnQgcmVhY3QvcmVxdWlyZS1kZWZhdWx0LXByb3BzOiAwICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgQ2FwdGlvbiA9IChwcm9wcykgPT4ge1xuICBpZiAoIXByb3BzLmNoaWxkcmVuKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIChcbiAgICA8Y2FwdGlvbj57IHByb3BzLmNoaWxkcmVuIH08L2NhcHRpb24+XG4gICk7XG59O1xuXG5DYXB0aW9uLnByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5ub2RlLFxuICAgIFByb3BUeXBlcy5zdHJpbmdcbiAgXSlcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcHRpb247XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9jYXB0aW9uLmpzIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbi8qIGVzbGludCByZWFjdC9yZXF1aXJlLWRlZmF1bHQtcHJvcHM6IDAgKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY3MgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCBfIGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IFJvdyBmcm9tICcuL3Jvdyc7XG5pbXBvcnQgUm93U2VjdGlvbiBmcm9tICcuL3Jvdy1zZWN0aW9uJztcbmltcG9ydCBDb25zdCBmcm9tICcuL2NvbnN0JztcblxuY29uc3QgQm9keSA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgY29sdW1ucyxcbiAgICBkYXRhLFxuICAgIGtleUZpZWxkLFxuICAgIGlzRW1wdHksXG4gICAgbm9EYXRhSW5kaWNhdGlvbixcbiAgICB2aXNpYmxlQ29sdW1uU2l6ZSxcbiAgICBjZWxsRWRpdCxcbiAgICBzZWxlY3RSb3csXG4gICAgc2VsZWN0ZWRSb3dLZXlzLFxuICAgIHJvd1N0eWxlLFxuICAgIHJvd0NsYXNzZXMsXG4gICAgcm93RXZlbnRzXG4gIH0gPSBwcm9wcztcblxuICBjb25zdCB7XG4gICAgYmdDb2xvcixcbiAgICBub25TZWxlY3RhYmxlXG4gIH0gPSBzZWxlY3RSb3c7XG5cbiAgbGV0IGNvbnRlbnQ7XG5cbiAgaWYgKGlzRW1wdHkpIHtcbiAgICBjb25zdCBpbmRpY2F0aW9uID0gXy5pc0Z1bmN0aW9uKG5vRGF0YUluZGljYXRpb24pID8gbm9EYXRhSW5kaWNhdGlvbigpIDogbm9EYXRhSW5kaWNhdGlvbjtcbiAgICBpZiAoIWluZGljYXRpb24pIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb250ZW50ID0gPFJvd1NlY3Rpb24gY29udGVudD17IGluZGljYXRpb24gfSBjb2xTcGFuPXsgdmlzaWJsZUNvbHVtblNpemUgfSAvPjtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBub25FZGl0YWJsZVJvd3MgPSBjZWxsRWRpdC5ub25FZGl0YWJsZVJvd3MgfHwgW107XG4gICAgY29udGVudCA9IGRhdGEubWFwKChyb3csIGluZGV4KSA9PiB7XG4gICAgICBjb25zdCBrZXkgPSBfLmdldChyb3csIGtleUZpZWxkKTtcbiAgICAgIGNvbnN0IGVkaXRhYmxlID0gIShub25FZGl0YWJsZVJvd3MubGVuZ3RoID4gMCAmJiBub25FZGl0YWJsZVJvd3MuaW5kZXhPZihrZXkpID4gLTEpO1xuXG4gICAgICBjb25zdCBzZWxlY3RlZCA9IHNlbGVjdFJvdy5tb2RlICE9PSBDb25zdC5ST1dfU0VMRUNUX0RJU0FCTEVEXG4gICAgICAgID8gc2VsZWN0ZWRSb3dLZXlzLmluY2x1ZGVzKGtleSlcbiAgICAgICAgOiBudWxsO1xuXG4gICAgICBjb25zdCBhdHRycyA9IHJvd0V2ZW50cyB8fCB7fTtcbiAgICAgIGxldCBzdHlsZSA9IF8uaXNGdW5jdGlvbihyb3dTdHlsZSkgPyByb3dTdHlsZShyb3csIGluZGV4KSA6IHJvd1N0eWxlO1xuICAgICAgbGV0IGNsYXNzZXMgPSAoXy5pc0Z1bmN0aW9uKHJvd0NsYXNzZXMpID8gcm93Q2xhc3Nlcyhyb3csIGluZGV4KSA6IHJvd0NsYXNzZXMpO1xuICAgICAgaWYgKHNlbGVjdGVkKSB7XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkU3R5bGUgPSBfLmlzRnVuY3Rpb24oc2VsZWN0Um93LnN0eWxlKVxuICAgICAgICAgID8gc2VsZWN0Um93LnN0eWxlKHJvdywgaW5kZXgpXG4gICAgICAgICAgOiBzZWxlY3RSb3cuc3R5bGU7XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRDbGFzc2VzID0gXy5pc0Z1bmN0aW9uKHNlbGVjdFJvdy5jbGFzc2VzKVxuICAgICAgICAgID8gc2VsZWN0Um93LmNsYXNzZXMocm93LCBpbmRleClcbiAgICAgICAgICA6IHNlbGVjdFJvdy5jbGFzc2VzO1xuXG4gICAgICAgIHN0eWxlID0ge1xuICAgICAgICAgIC4uLnN0eWxlLFxuICAgICAgICAgIC4uLnNlbGVjdGVkU3R5bGVcbiAgICAgICAgfTtcbiAgICAgICAgY2xhc3NlcyA9IGNzKGNsYXNzZXMsIHNlbGVjdGVkQ2xhc3Nlcyk7XG5cbiAgICAgICAgaWYgKGJnQ29sb3IpIHtcbiAgICAgICAgICBzdHlsZSA9IHN0eWxlIHx8IHt9O1xuICAgICAgICAgIHN0eWxlLmJhY2tncm91bmRDb2xvciA9IF8uaXNGdW5jdGlvbihiZ0NvbG9yKSA/IGJnQ29sb3Iocm93LCBpbmRleCkgOiBiZ0NvbG9yO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHNlbGVjdGFibGUgPSAhbm9uU2VsZWN0YWJsZSB8fCAhbm9uU2VsZWN0YWJsZS5pbmNsdWRlcyhrZXkpO1xuXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Um93XG4gICAgICAgICAga2V5PXsga2V5IH1cbiAgICAgICAgICByb3c9eyByb3cgfVxuICAgICAgICAgIGtleUZpZWxkPXsga2V5RmllbGQgfVxuICAgICAgICAgIHJvd0luZGV4PXsgaW5kZXggfVxuICAgICAgICAgIGNvbHVtbnM9eyBjb2x1bW5zIH1cbiAgICAgICAgICBjZWxsRWRpdD17IGNlbGxFZGl0IH1cbiAgICAgICAgICBlZGl0YWJsZT17IGVkaXRhYmxlIH1cbiAgICAgICAgICBzZWxlY3RhYmxlPXsgc2VsZWN0YWJsZSB9XG4gICAgICAgICAgc2VsZWN0ZWQ9eyBzZWxlY3RlZCB9XG4gICAgICAgICAgc2VsZWN0Um93PXsgc2VsZWN0Um93IH1cbiAgICAgICAgICBzdHlsZT17IHN0eWxlIH1cbiAgICAgICAgICBjbGFzc05hbWU9eyBjbGFzc2VzIH1cbiAgICAgICAgICBhdHRycz17IGF0dHJzIH1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDx0Ym9keT57IGNvbnRlbnQgfTwvdGJvZHk+XG4gICk7XG59O1xuXG5Cb2R5LnByb3BUeXBlcyA9IHtcbiAga2V5RmllbGQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgZGF0YTogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIGNvbHVtbnM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBzZWxlY3RSb3c6IFByb3BUeXBlcy5vYmplY3QsXG4gIHNlbGVjdGVkUm93S2V5czogUHJvcFR5cGVzLmFycmF5XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb2R5O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvYm9keS5qcyIsIi8qIGVzbGludCByZWFjdC9wcm9wLXR5cGVzOiAwICovXG4vKiBlc2xpbnQgcmVhY3Qvbm8tYXJyYXktaW5kZXgta2V5OiAwICovXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IF8gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgQ2VsbCBmcm9tICcuL2NlbGwnO1xuaW1wb3J0IFNlbGVjdGlvbkNlbGwgZnJvbSAnLi9yb3ctc2VsZWN0aW9uL3NlbGVjdGlvbi1jZWxsJztcbmltcG9ydCBldmVudERlbGVnYXRlciBmcm9tICcuL3Jvdy1ldmVudC1kZWxlZ2F0ZXInO1xuaW1wb3J0IENvbnN0IGZyb20gJy4vY29uc3QnO1xuXG5jbGFzcyBSb3cgZXh0ZW5kcyBldmVudERlbGVnYXRlcihDb21wb25lbnQpIHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHJvdyxcbiAgICAgIGNvbHVtbnMsXG4gICAgICBrZXlGaWVsZCxcbiAgICAgIHJvd0luZGV4LFxuICAgICAgY2xhc3NOYW1lLFxuICAgICAgc3R5bGUsXG4gICAgICBhdHRycyxcbiAgICAgIGNlbGxFZGl0LFxuICAgICAgc2VsZWN0ZWQsXG4gICAgICBzZWxlY3RSb3csXG4gICAgICBzZWxlY3RhYmxlLFxuICAgICAgZWRpdGFibGU6IGVkaXRhYmxlUm93XG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCB7XG4gICAgICBtb2RlLFxuICAgICAgb25TdGFydCxcbiAgICAgIEVkaXRpbmdDZWxsLFxuICAgICAgcmlkeDogZWRpdGluZ1Jvd0lkeCxcbiAgICAgIGNpZHg6IGVkaXRpbmdDb2xJZHgsXG4gICAgICBDTElDS19UT19DRUxMX0VESVQsXG4gICAgICBEQkNMSUNLX1RPX0NFTExfRURJVCxcbiAgICAgIC4uLnJlc3RcbiAgICB9ID0gY2VsbEVkaXQ7XG5cbiAgICBjb25zdCBrZXkgPSBfLmdldChyb3csIGtleUZpZWxkKTtcbiAgICBjb25zdCB7IGhpZGVTZWxlY3RDb2x1bW4gfSA9IHNlbGVjdFJvdztcbiAgICBjb25zdCB0ckF0dHJzID0gdGhpcy5kZWxlZ2F0ZShhdHRycyk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPHRyIHN0eWxlPXsgc3R5bGUgfSBjbGFzc05hbWU9eyBjbGFzc05hbWUgfSB7IC4uLnRyQXR0cnMgfT5cbiAgICAgICAge1xuICAgICAgICAgIChzZWxlY3RSb3cubW9kZSAhPT0gQ29uc3QuUk9XX1NFTEVDVF9ESVNBQkxFRCAmJiAhaGlkZVNlbGVjdENvbHVtbilcbiAgICAgICAgICAgID8gKFxuICAgICAgICAgICAgICA8U2VsZWN0aW9uQ2VsbFxuICAgICAgICAgICAgICAgIHsgLi4uc2VsZWN0Um93IH1cbiAgICAgICAgICAgICAgICByb3dLZXk9eyBrZXkgfVxuICAgICAgICAgICAgICAgIHJvd0luZGV4PXsgcm93SW5kZXggfVxuICAgICAgICAgICAgICAgIHNlbGVjdGVkPXsgc2VsZWN0ZWQgfVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXsgIXNlbGVjdGFibGUgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgOiBudWxsXG4gICAgICAgIH1cbiAgICAgICAge1xuICAgICAgICAgIGNvbHVtbnMubWFwKChjb2x1bW4sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNvbHVtbi5oaWRkZW4pIHtcbiAgICAgICAgICAgICAgY29uc3QgeyBkYXRhRmllbGQgfSA9IGNvbHVtbjtcbiAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IF8uZ2V0KHJvdywgZGF0YUZpZWxkKTtcbiAgICAgICAgICAgICAgbGV0IGVkaXRhYmxlID0gXy5pc0RlZmluZWQoY29sdW1uLmVkaXRhYmxlKSA/IGNvbHVtbi5lZGl0YWJsZSA6IHRydWU7XG4gICAgICAgICAgICAgIGlmIChkYXRhRmllbGQgPT09IGtleUZpZWxkIHx8ICFlZGl0YWJsZVJvdykgZWRpdGFibGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgaWYgKF8uaXNGdW5jdGlvbihjb2x1bW4uZWRpdGFibGUpKSB7XG4gICAgICAgICAgICAgICAgZWRpdGFibGUgPSBjb2x1bW4uZWRpdGFibGUoY29udGVudCwgcm93LCByb3dJbmRleCwgaW5kZXgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmIChyb3dJbmRleCA9PT0gZWRpdGluZ1Jvd0lkeCAmJiBpbmRleCA9PT0gZWRpdGluZ0NvbElkeCkge1xuICAgICAgICAgICAgICAgIGxldCBlZGl0Q2VsbHN0eWxlID0gY29sdW1uLmVkaXRDZWxsU3R5bGUgfHwge307XG4gICAgICAgICAgICAgICAgbGV0IGVkaXRDZWxsY2xhc3NlcyA9IGNvbHVtbi5lZGl0Q2VsbENsYXNzZXM7XG4gICAgICAgICAgICAgICAgaWYgKF8uaXNGdW5jdGlvbihjb2x1bW4uZWRpdENlbGxTdHlsZSkpIHtcbiAgICAgICAgICAgICAgICAgIGVkaXRDZWxsc3R5bGUgPSBjb2x1bW4uZWRpdENlbGxTdHlsZShjb250ZW50LCByb3csIHJvd0luZGV4LCBpbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChfLmlzRnVuY3Rpb24oY29sdW1uLmVkaXRDZWxsQ2xhc3NlcykpIHtcbiAgICAgICAgICAgICAgICAgIGVkaXRDZWxsY2xhc3NlcyA9IGNvbHVtbi5lZGl0Q2VsbENsYXNzZXMoY29udGVudCwgcm93LCByb3dJbmRleCwgaW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPEVkaXRpbmdDZWxsXG4gICAgICAgICAgICAgICAgICAgIGtleT17IGAke2NvbnRlbnR9LSR7aW5kZXh9YCB9XG4gICAgICAgICAgICAgICAgICAgIHJvdz17IHJvdyB9XG4gICAgICAgICAgICAgICAgICAgIHJvd0luZGV4PXsgcm93SW5kZXggfVxuICAgICAgICAgICAgICAgICAgICBjb2x1bW49eyBjb2x1bW4gfVxuICAgICAgICAgICAgICAgICAgICBjb2x1bW5JbmRleD17IGluZGV4IH1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgZWRpdENlbGxjbGFzc2VzIH1cbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9eyBlZGl0Q2VsbHN0eWxlIH1cbiAgICAgICAgICAgICAgICAgICAgeyAuLi5yZXN0IH1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxDZWxsXG4gICAgICAgICAgICAgICAgICBrZXk9eyBgJHtjb250ZW50fS0ke2luZGV4fWAgfVxuICAgICAgICAgICAgICAgICAgcm93PXsgcm93IH1cbiAgICAgICAgICAgICAgICAgIHJvd0luZGV4PXsgcm93SW5kZXggfVxuICAgICAgICAgICAgICAgICAgY29sdW1uSW5kZXg9eyBpbmRleCB9XG4gICAgICAgICAgICAgICAgICBjb2x1bW49eyBjb2x1bW4gfVxuICAgICAgICAgICAgICAgICAgb25TdGFydD17IG9uU3RhcnQgfVxuICAgICAgICAgICAgICAgICAgZWRpdGFibGU9eyBlZGl0YWJsZSB9XG4gICAgICAgICAgICAgICAgICBjbGlja1RvRWRpdD17IG1vZGUgPT09IENMSUNLX1RPX0NFTExfRURJVCB9XG4gICAgICAgICAgICAgICAgICBkYmNsaWNrVG9FZGl0PXsgbW9kZSA9PT0gREJDTElDS19UT19DRUxMX0VESVQgfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgPC90cj5cbiAgICApO1xuICB9XG59XG5cblJvdy5wcm9wVHlwZXMgPSB7XG4gIHJvdzogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICByb3dJbmRleDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBjb2x1bW5zOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgYXR0cnM6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cblJvdy5kZWZhdWx0UHJvcHMgPSB7XG4gIGVkaXRhYmxlOiB0cnVlLFxuICBzdHlsZToge30sXG4gIGNsYXNzTmFtZTogbnVsbCxcbiAgYXR0cnM6IHt9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBSb3c7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9yb3cuanMiLCIvKiBlc2xpbnQgcmVhY3QvcHJvcC10eXBlczogMCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBfIGZyb20gJy4vdXRpbHMnO1xuXG5jbGFzcyBDZWxsIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5oYW5kbGVFZGl0aW5nQ2VsbCA9IHRoaXMuaGFuZGxlRWRpdGluZ0NlbGwuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZUVkaXRpbmdDZWxsKGUpIHtcbiAgICBjb25zdCB7IGNvbHVtbiwgb25TdGFydCwgcm93SW5kZXgsIGNvbHVtbkluZGV4LCBjbGlja1RvRWRpdCwgZGJjbGlja1RvRWRpdCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGV2ZW50cyB9ID0gY29sdW1uO1xuICAgIGlmIChldmVudHMpIHtcbiAgICAgIGlmIChjbGlja1RvRWRpdCkge1xuICAgICAgICBjb25zdCBjdXN0b21DbGljayA9IGV2ZW50cy5vbkNsaWNrO1xuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKGN1c3RvbUNsaWNrKSkgY3VzdG9tQ2xpY2soZSk7XG4gICAgICB9IGVsc2UgaWYgKGRiY2xpY2tUb0VkaXQpIHtcbiAgICAgICAgY29uc3QgY3VzdG9tRGJDbGljayA9IGV2ZW50cy5vbkRvdWJsZUNsaWNrO1xuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKGN1c3RvbURiQ2xpY2spKSBjdXN0b21EYkNsaWNrKGUpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAob25TdGFydCkge1xuICAgICAgb25TdGFydChyb3dJbmRleCwgY29sdW1uSW5kZXgpO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICByb3csXG4gICAgICByb3dJbmRleCxcbiAgICAgIGNvbHVtbixcbiAgICAgIGNvbHVtbkluZGV4LFxuICAgICAgZWRpdGFibGUsXG4gICAgICBjbGlja1RvRWRpdCxcbiAgICAgIGRiY2xpY2tUb0VkaXRcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7XG4gICAgICBkYXRhRmllbGQsXG4gICAgICBmb3JtYXR0ZXIsXG4gICAgICBmb3JtYXRFeHRyYURhdGEsXG4gICAgICBzdHlsZSxcbiAgICAgIGNsYXNzZXMsXG4gICAgICB0aXRsZSxcbiAgICAgIGV2ZW50cyxcbiAgICAgIGFsaWduLFxuICAgICAgYXR0cnNcbiAgICB9ID0gY29sdW1uO1xuICAgIGxldCBjZWxsVGl0bGU7XG4gICAgbGV0IGNlbGxTdHlsZSA9IHt9O1xuICAgIGxldCBjb250ZW50ID0gXy5nZXQocm93LCBkYXRhRmllbGQpO1xuXG4gICAgY29uc3QgY2VsbEF0dHJzID0ge1xuICAgICAgLi4uXy5pc0Z1bmN0aW9uKGF0dHJzKSA/IGF0dHJzKGNvbnRlbnQsIHJvdywgcm93SW5kZXgsIGNvbHVtbkluZGV4KSA6IGF0dHJzLFxuICAgICAgLi4uZXZlbnRzXG4gICAgfTtcblxuICAgIGNvbnN0IGNlbGxDbGFzc2VzID0gXy5pc0Z1bmN0aW9uKGNsYXNzZXMpXG4gICAgICA/IGNsYXNzZXMoY29udGVudCwgcm93LCByb3dJbmRleCwgY29sdW1uSW5kZXgpXG4gICAgICA6IGNsYXNzZXM7XG5cbiAgICBpZiAoc3R5bGUpIHtcbiAgICAgIGNlbGxTdHlsZSA9IF8uaXNGdW5jdGlvbihzdHlsZSkgPyBzdHlsZShjb250ZW50LCByb3csIHJvd0luZGV4LCBjb2x1bW5JbmRleCkgOiBzdHlsZTtcbiAgICB9XG5cbiAgICBpZiAodGl0bGUpIHtcbiAgICAgIGNlbGxUaXRsZSA9IF8uaXNGdW5jdGlvbih0aXRsZSkgPyB0aXRsZShjb250ZW50LCByb3csIHJvd0luZGV4LCBjb2x1bW5JbmRleCkgOiBjb250ZW50O1xuICAgICAgY2VsbEF0dHJzLnRpdGxlID0gY2VsbFRpdGxlO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXR0ZXIpIHtcbiAgICAgIGNvbnRlbnQgPSBjb2x1bW4uZm9ybWF0dGVyKGNvbnRlbnQsIHJvdywgcm93SW5kZXgsIGZvcm1hdEV4dHJhRGF0YSk7XG4gICAgfVxuXG4gICAgaWYgKGFsaWduKSB7XG4gICAgICBjZWxsU3R5bGUudGV4dEFsaWduID1cbiAgICAgICAgXy5pc0Z1bmN0aW9uKGFsaWduKSA/IGFsaWduKGNvbnRlbnQsIHJvdywgcm93SW5kZXgsIGNvbHVtbkluZGV4KSA6IGFsaWduO1xuICAgIH1cblxuICAgIGlmIChjZWxsQ2xhc3NlcykgY2VsbEF0dHJzLmNsYXNzTmFtZSA9IGNlbGxDbGFzc2VzO1xuXG4gICAgaWYgKCFfLmlzRW1wdHlPYmplY3QoY2VsbFN0eWxlKSkgY2VsbEF0dHJzLnN0eWxlID0gY2VsbFN0eWxlO1xuICAgIGlmIChjbGlja1RvRWRpdCAmJiBlZGl0YWJsZSkge1xuICAgICAgY2VsbEF0dHJzLm9uQ2xpY2sgPSB0aGlzLmhhbmRsZUVkaXRpbmdDZWxsO1xuICAgIH0gZWxzZSBpZiAoZGJjbGlja1RvRWRpdCAmJiBlZGl0YWJsZSkge1xuICAgICAgY2VsbEF0dHJzLm9uRG91YmxlQ2xpY2sgPSB0aGlzLmhhbmRsZUVkaXRpbmdDZWxsO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgPHRkIHsgLi4uY2VsbEF0dHJzIH0+eyBjb250ZW50IH08L3RkPlxuICAgICk7XG4gIH1cbn1cblxuQ2VsbC5wcm9wVHlwZXMgPSB7XG4gIHJvdzogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICByb3dJbmRleDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBjb2x1bW46IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY29sdW1uSW5kZXg6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2VsbDtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL2NlbGwuanMiLCIvKiBlc2xpbnRcbiAgcmVhY3QvcmVxdWlyZS1kZWZhdWx0LXByb3BzOiAwXG4gIGpzeC1hMTF5L25vLW5vbmludGVyYWN0aXZlLWVsZW1lbnQtaW50ZXJhY3Rpb25zOiAwXG4qL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQ29uc3QgZnJvbSAnLi4vY29uc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWxlY3Rpb25DZWxsIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBtb2RlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgcm93S2V5OiBQcm9wVHlwZXMuYW55LFxuICAgIHNlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBvblJvd1NlbGVjdDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIHJvd0luZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNsaWNrVG9TZWxlY3Q6IFByb3BUeXBlcy5ib29sXG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgY29uc3QgeyBzZWxlY3RlZCB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBuZXh0UHJvcHMuc2VsZWN0ZWQgIT09IHNlbGVjdGVkO1xuICB9XG5cbiAgaGFuZGxlQ2xpY2soKSB7XG4gICAgY29uc3Qge1xuICAgICAgbW9kZTogaW5wdXRUeXBlLFxuICAgICAgcm93S2V5LFxuICAgICAgc2VsZWN0ZWQsXG4gICAgICBvblJvd1NlbGVjdCxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgcm93SW5kZXgsXG4gICAgICBjbGlja1RvU2VsZWN0XG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAoZGlzYWJsZWQpIHJldHVybjtcbiAgICBpZiAoY2xpY2tUb1NlbGVjdCkgcmV0dXJuO1xuXG4gICAgY29uc3QgY2hlY2tlZCA9IGlucHV0VHlwZSA9PT0gQ29uc3QuUk9XX1NFTEVDVF9TSU5HTEVcbiAgICAgID8gdHJ1ZVxuICAgICAgOiAhc2VsZWN0ZWQ7XG5cbiAgICBvblJvd1NlbGVjdChyb3dLZXksIGNoZWNrZWQsIHJvd0luZGV4KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBtb2RlOiBpbnB1dFR5cGUsXG4gICAgICBzZWxlY3RlZCxcbiAgICAgIGRpc2FibGVkXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPHRkIG9uQ2xpY2s9eyB0aGlzLmhhbmRsZUNsaWNrIH0+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIHR5cGU9eyBpbnB1dFR5cGUgfVxuICAgICAgICAgIGNoZWNrZWQ9eyBzZWxlY3RlZCB9XG4gICAgICAgICAgZGlzYWJsZWQ9eyBkaXNhYmxlZCB9XG4gICAgICAgIC8+XG4gICAgICA8L3RkPlxuICAgICk7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTIvc3JjL3Jvdy1zZWxlY3Rpb24vc2VsZWN0aW9uLWNlbGwuanMiLCJpbXBvcnQgXyBmcm9tICcuL3V0aWxzJztcblxuY29uc3QgZXZlbnRzID0gW1xuICAnb25DbGljaycsXG4gICdvbk1vdXNlRW50ZXInLFxuICAnb25Nb3VzZUxlYXZlJ1xuXTtcblxuZXhwb3J0IGRlZmF1bHQgRXh0ZW5kQmFzZSA9PlxuICBjbGFzcyBSb3dFdmVudERlbGVnYXRlciBleHRlbmRzIEV4dGVuZEJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICBzdXBlcihwcm9wcyk7XG4gICAgICB0aGlzLmNsaWNrTnVtID0gMDtcbiAgICAgIHRoaXMuY3JlYXRlRGVmYXVsdEV2ZW50SGFuZGxlciA9IHRoaXMuY3JlYXRlRGVmYXVsdEV2ZW50SGFuZGxlci5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5jcmVhdGVDbGlja0V2ZW50SGFuZGxlciA9IHRoaXMuY3JlYXRlQ2xpY2tFdmVudEhhbmRsZXIuYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICBjcmVhdGVEZWZhdWx0RXZlbnRIYW5kbGVyKGNiKSB7XG4gICAgICByZXR1cm4gKGUpID0+IHtcbiAgICAgICAgY29uc3QgeyByb3csIHJvd0luZGV4IH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjYihlLCByb3csIHJvd0luZGV4KTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY3JlYXRlQ2xpY2tFdmVudEhhbmRsZXIoY2IpIHtcbiAgICAgIHJldHVybiAoZSkgPT4ge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgcm93LFxuICAgICAgICAgIHNlbGVjdGVkLFxuICAgICAgICAgIGtleUZpZWxkLFxuICAgICAgICAgIHNlbGVjdGFibGUsXG4gICAgICAgICAgcm93SW5kZXgsXG4gICAgICAgICAgc2VsZWN0Um93OiB7XG4gICAgICAgICAgICBvblJvd1NlbGVjdCxcbiAgICAgICAgICAgIGNsaWNrVG9FZGl0XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjZWxsRWRpdDoge1xuICAgICAgICAgICAgbW9kZSxcbiAgICAgICAgICAgIERCQ0xJQ0tfVE9fQ0VMTF9FRElULFxuICAgICAgICAgICAgREVMQVlfRk9SX0RCQ0xJQ0tcbiAgICAgICAgICB9XG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGNvbnN0IGNsaWNrRm4gPSAoKSA9PiB7XG4gICAgICAgICAgaWYgKGNiKSB7XG4gICAgICAgICAgICBjYihlLCByb3csIHJvd0luZGV4KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHNlbGVjdGFibGUpIHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IF8uZ2V0KHJvdywga2V5RmllbGQpO1xuICAgICAgICAgICAgb25Sb3dTZWxlY3Qoa2V5LCAhc2VsZWN0ZWQsIHJvd0luZGV4KTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKG1vZGUgPT09IERCQ0xJQ0tfVE9fQ0VMTF9FRElUICYmIGNsaWNrVG9FZGl0KSB7XG4gICAgICAgICAgdGhpcy5jbGlja051bSArPSAxO1xuICAgICAgICAgIF8uZGVib3VuY2UoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuY2xpY2tOdW0gPT09IDEpIHtcbiAgICAgICAgICAgICAgY2xpY2tGbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jbGlja051bSA9IDA7XG4gICAgICAgICAgfSwgREVMQVlfRk9SX0RCQ0xJQ0spKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2xpY2tGbigpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIGRlbGVnYXRlKGF0dHJzID0ge30pIHtcbiAgICAgIGNvbnN0IG5ld0F0dHJzID0ge307XG4gICAgICBpZiAodGhpcy5wcm9wcy5zZWxlY3RSb3cgJiYgdGhpcy5wcm9wcy5zZWxlY3RSb3cuY2xpY2tUb1NlbGVjdCkge1xuICAgICAgICBuZXdBdHRycy5vbkNsaWNrID0gdGhpcy5jcmVhdGVDbGlja0V2ZW50SGFuZGxlcihhdHRycy5vbkNsaWNrKTtcbiAgICAgIH1cbiAgICAgIE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKChhdHRyKSA9PiB7XG4gICAgICAgIGlmICghbmV3QXR0cnNbYXR0cl0pIHtcbiAgICAgICAgICBpZiAoZXZlbnRzLmluY2x1ZGVzKGF0dHIpKSB7XG4gICAgICAgICAgICBuZXdBdHRyc1thdHRyXSA9IHRoaXMuY3JlYXRlRGVmYXVsdEV2ZW50SGFuZGxlcihhdHRyc1thdHRyXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ld0F0dHJzW2F0dHJdID0gYXR0cnNbYXR0cl07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBuZXdBdHRycztcbiAgICB9XG4gIH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9yb3ctZXZlbnQtZGVsZWdhdGVyLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IFJvd1NlY3Rpb24gPSAoeyBjb250ZW50LCBjb2xTcGFuIH0pID0+IChcbiAgPHRyPlxuICAgIDx0ZFxuICAgICAgZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXG4gICAgICBjb2xTcGFuPXsgY29sU3BhbiB9XG4gICAgICBjbGFzc05hbWU9XCJyZWFjdC1icy10YWJsZS1uby1kYXRhXCJcbiAgICA+XG4gICAgICB7IGNvbnRlbnQgfVxuICAgIDwvdGQ+XG4gIDwvdHI+XG4pO1xuXG5Sb3dTZWN0aW9uLnByb3BUeXBlcyA9IHtcbiAgY29udGVudDogUHJvcFR5cGVzLmFueSxcbiAgY29sU3BhbjogUHJvcFR5cGVzLm51bWJlclxufTtcblxuUm93U2VjdGlvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIGNvbnRlbnQ6IG51bGwsXG4gIGNvbFNwYW46IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJvd1NlY3Rpb247XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9yb3ctc2VjdGlvbi5qcyIsImltcG9ydCBDb2x1bW5SZXNvbHZlciBmcm9tICcuL2NvbHVtbi1yZXNvbHZlcic7XG5pbXBvcnQgQ29uc3QgZnJvbSAnLi4vY29uc3QnO1xuaW1wb3J0IF8gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBFeHRlbmRCYXNlID0+XG4gIGNsYXNzIFRhYmxlUmVzb2x2ZXIgZXh0ZW5kcyBDb2x1bW5SZXNvbHZlcihFeHRlbmRCYXNlKSB7XG4gICAgdmFsaWRhdGVQcm9wcygpIHtcbiAgICAgIGNvbnN0IHsga2V5RmllbGQgfSA9IHRoaXMucHJvcHM7XG4gICAgICBpZiAoIWtleUZpZWxkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIHNwZWNpZnkgYSBmaWVsZCBhcyBrZXkgdmlhIGtleUZpZWxkJyk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy52aXNpYmxlQ29sdW1uU2l6ZShmYWxzZSkgPD0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHZpc2libGUgY29sdW1ucyBkZXRlY3RlZCcpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlzRW1wdHkoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5kYXRhLmxlbmd0aCA9PT0gMDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBwcm9wcyByZXNvbHZlciBmb3IgY2VsbCBzZWxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIGFkZHRpb25hbCBvcHRpb25zIGxpa2UgY2FsbGJhY2sgd2hpY2ggYXJlIGFib3V0IHRvIG1lcmdlIGludG8gcHJvcHNcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IHJlc3VsdCAtIHByb3BzIGZvciBjZWxsIHNlbGVjdGlvbnNcbiAgICAgKiBAcmV0dXJucyB7U3RyaW5nfSByZXN1bHQubW9kZSAtIGlucHV0IHR5cGUgb2Ygcm93IHNlbGVjdGlvbiBvciBkaXNhYmxlZC5cbiAgICAgKi9cbiAgICByZXNvbHZlU2VsZWN0Um93UHJvcHMob3B0aW9ucykge1xuICAgICAgY29uc3QgeyBzZWxlY3RSb3cgfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCB7IFJPV19TRUxFQ1RfRElTQUJMRUQgfSA9IENvbnN0O1xuXG4gICAgICBpZiAoXy5pc0RlZmluZWQoc2VsZWN0Um93KSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnNlbGVjdFJvdyxcbiAgICAgICAgICAuLi5vcHRpb25zXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIG1vZGU6IFJPV19TRUxFQ1RfRElTQUJMRURcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcHJvcHMgcmVzb2x2ZXIgZm9yIGhlYWRlciBjZWxsIHNlbGVjdGlvblxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gYWRkdGlvbmFsIG9wdGlvbnMgbGlrZSBjYWxsYmFjayB3aGljaCBhcmUgYWJvdXQgdG8gbWVyZ2UgaW50byBwcm9wc1xuICAgICAqXG4gICAgICogQHJldHVybnMge09iamVjdH0gcmVzdWx0IC0gcHJvcHMgZm9yIGNlbGwgc2VsZWN0aW9uc1xuICAgICAqIEByZXR1cm5zIHtTdHJpbmd9IHJlc3VsdC5tb2RlIC0gaW5wdXQgdHlwZSBvZiByb3cgc2VsZWN0aW9uIG9yIGRpc2FibGVkLlxuICAgICAqIEByZXR1cm5zIHtTdHJpbmd9IHJlc3VsdC5jaGVja2VkU3RhdHVzIC0gY2hlY2tib3ggc3RhdHVzIGRlcGVuZGluZyBvbiBzZWxlY3RlZCByb3dzIGNvdW50c1xuICAgICAqL1xuICAgIHJlc29sdmVTZWxlY3RSb3dQcm9wc0ZvckhlYWRlcihvcHRpb25zID0ge30pIHtcbiAgICAgIGNvbnN0IHsgc2VsZWN0Um93IH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3QgeyBhbGxSb3dzU2VsZWN0ZWQsIHNlbGVjdGVkID0gW10sIC4uLnJlc3QgfSA9IG9wdGlvbnM7XG4gICAgICBjb25zdCB7XG4gICAgICAgIFJPV19TRUxFQ1RfRElTQUJMRUQsIENIRUNLQk9YX1NUQVRVU19DSEVDS0VELFxuICAgICAgICBDSEVDS0JPWF9TVEFUVVNfSU5ERVRFUk1JTkFURSwgQ0hFQ0tCT1hfU1RBVFVTX1VOQ0hFQ0tFRFxuICAgICAgfSA9IENvbnN0O1xuXG4gICAgICBpZiAoXy5pc0RlZmluZWQoc2VsZWN0Um93KSkge1xuICAgICAgICBsZXQgY2hlY2tlZFN0YXR1cztcblxuICAgICAgICAvLyBjaGVja2JveCBzdGF0dXMgZGVwZW5kaW5nIG9uIHNlbGVjdGVkIHJvd3MgY291bnRzXG4gICAgICAgIGlmIChhbGxSb3dzU2VsZWN0ZWQpIGNoZWNrZWRTdGF0dXMgPSBDSEVDS0JPWF9TVEFUVVNfQ0hFQ0tFRDtcbiAgICAgICAgZWxzZSBpZiAoc2VsZWN0ZWQubGVuZ3RoID09PSAwKSBjaGVja2VkU3RhdHVzID0gQ0hFQ0tCT1hfU1RBVFVTX1VOQ0hFQ0tFRDtcbiAgICAgICAgZWxzZSBjaGVja2VkU3RhdHVzID0gQ0hFQ0tCT1hfU1RBVFVTX0lOREVURVJNSU5BVEU7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zZWxlY3RSb3csXG4gICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICBjaGVja2VkU3RhdHVzXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIG1vZGU6IFJPV19TRUxFQ1RfRElTQUJMRURcbiAgICAgIH07XG4gICAgfVxuICB9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvcHJvcHMtcmVzb2x2ZXIvaW5kZXguanMiLCJleHBvcnQgZGVmYXVsdCBFeHRlbmRCYXNlID0+XG4gIGNsYXNzIENvbHVtblJlc29sdmVyIGV4dGVuZHMgRXh0ZW5kQmFzZSB7XG4gICAgdmlzaWJsZUNvbHVtblNpemUoaW5jbHVkZVNlbGVjdENvbHVtbiA9IHRydWUpIHtcbiAgICAgIGNvbnN0IGNvbHVtbkxlbiA9IHRoaXMucHJvcHMuY29sdW1ucy5maWx0ZXIoYyA9PiAhYy5oaWRkZW4pLmxlbmd0aDtcbiAgICAgIGlmICghaW5jbHVkZVNlbGVjdENvbHVtbikgcmV0dXJuIGNvbHVtbkxlbjtcbiAgICAgIGlmICh0aGlzLnByb3BzLnNlbGVjdFJvdyAmJiAhdGhpcy5wcm9wcy5zZWxlY3RSb3cuaGlkZVNlbGVjdENvbHVtbikge1xuICAgICAgICByZXR1cm4gY29sdW1uTGVuICsgMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb2x1bW5MZW47XG4gICAgfVxuICB9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvcHJvcHMtcmVzb2x2ZXIvY29sdW1uLXJlc29sdmVyLmpzIiwiLyogZXNsaW50IG5vLXJldHVybi1hc3NpZ246IDAgKi9cbi8qIGVzbGludCByZWFjdC9wcm9wLXR5cGVzOiAwICovXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFN0b3JlIGZyb20gJy4vc3RvcmUnO1xuaW1wb3J0IHdpdGhTb3J0IGZyb20gJy4vc29ydC93cmFwcGVyJztcbmltcG9ydCB3aXRoU2VsZWN0aW9uIGZyb20gJy4vcm93LXNlbGVjdGlvbi93cmFwcGVyJztcblxuaW1wb3J0IHJlbW90ZVJlc29sdmVyIGZyb20gJy4vcHJvcHMtcmVzb2x2ZXIvcmVtb3RlLXJlc29sdmVyJztcbmltcG9ydCBfIGZyb20gJy4vdXRpbHMnO1xuXG5jb25zdCB3aXRoRGF0YVN0b3JlID0gQmFzZSA9PlxuICBjbGFzcyBCb290c3RyYXBUYWJsZUNvbnRhaW5lciBleHRlbmRzIHJlbW90ZVJlc29sdmVyKENvbXBvbmVudCkge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICBzdXBlcihwcm9wcyk7XG4gICAgICB0aGlzLnN0b3JlID0gbmV3IFN0b3JlKHByb3BzLmtleUZpZWxkKTtcbiAgICAgIHRoaXMuc3RvcmUuZGF0YSA9IHByb3BzLmRhdGE7XG4gICAgICB0aGlzLndyYXBDb21wb25lbnRzKCk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHRoaXMuc3RvcmUuc2V0QWxsRGF0YShuZXh0UHJvcHMuZGF0YSk7XG4gICAgfVxuXG4gICAgd3JhcENvbXBvbmVudHMoKSB7XG4gICAgICB0aGlzLkJhc2VDb21wb25lbnQgPSBCYXNlO1xuICAgICAgY29uc3QgeyBwYWdpbmF0aW9uLCBjb2x1bW5zLCBmaWx0ZXIsIHNlbGVjdFJvdywgY2VsbEVkaXQgfSA9IHRoaXMucHJvcHM7XG4gICAgICBpZiAocGFnaW5hdGlvbikge1xuICAgICAgICBjb25zdCB7IHdyYXBwZXJGYWN0b3J5IH0gPSBwYWdpbmF0aW9uO1xuICAgICAgICB0aGlzLkJhc2VDb21wb25lbnQgPSB3cmFwcGVyRmFjdG9yeSh0aGlzLkJhc2VDb21wb25lbnQsIHtcbiAgICAgICAgICByZW1vdGVSZXNvbHZlclxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNvbHVtbnMuZmlsdGVyKGNvbCA9PiBjb2wuc29ydCkubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLkJhc2VDb21wb25lbnQgPSB3aXRoU29ydCh0aGlzLkJhc2VDb21wb25lbnQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoZmlsdGVyKSB7XG4gICAgICAgIGNvbnN0IHsgd3JhcHBlckZhY3RvcnkgfSA9IGZpbHRlcjtcbiAgICAgICAgdGhpcy5CYXNlQ29tcG9uZW50ID0gd3JhcHBlckZhY3RvcnkodGhpcy5CYXNlQ29tcG9uZW50LCB7XG4gICAgICAgICAgXyxcbiAgICAgICAgICByZW1vdGVSZXNvbHZlclxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNlbGxFZGl0KSB7XG4gICAgICAgIGNvbnN0IHsgd3JhcHBlckZhY3RvcnkgfSA9IGNlbGxFZGl0O1xuICAgICAgICB0aGlzLkJhc2VDb21wb25lbnQgPSB3cmFwcGVyRmFjdG9yeSh0aGlzLkJhc2VDb21wb25lbnQsIHtcbiAgICAgICAgICBfLFxuICAgICAgICAgIHJlbW90ZVJlc29sdmVyXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2VsZWN0Um93KSB7XG4gICAgICAgIHRoaXMuQmFzZUNvbXBvbmVudCA9IHdpdGhTZWxlY3Rpb24odGhpcy5CYXNlQ29tcG9uZW50KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCBiYXNlUHJvcHMgPSB7XG4gICAgICAgIC4uLnRoaXMucHJvcHMsXG4gICAgICAgIHN0b3JlOiB0aGlzLnN0b3JlXG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8dGhpcy5CYXNlQ29tcG9uZW50IHsgLi4uYmFzZVByb3BzIH0gLz5cbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoRGF0YVN0b3JlO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvY29udGFpbmVyLmpzIiwiLyogZXNsaW50IG5vLXVuZGVyc2NvcmUtZGFuZ2xlOiAwICovXG5pbXBvcnQgXyBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzb3J0LCBuZXh0T3JkZXIgfSBmcm9tICcuL3NvcnQnO1xuaW1wb3J0IHsgZ2V0Um93QnlSb3dJZCB9IGZyb20gJy4vcm93cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0b3JlIHtcbiAgY29uc3RydWN0b3Ioa2V5RmllbGQpIHtcbiAgICB0aGlzLl9kYXRhID0gW107XG4gICAgdGhpcy5fZmlsdGVyZWREYXRhID0gW107XG4gICAgdGhpcy5fa2V5RmllbGQgPSBrZXlGaWVsZDtcbiAgICB0aGlzLl9zb3J0T3JkZXIgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5fc29ydEZpZWxkID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuX3NlbGVjdGVkID0gW107XG4gICAgdGhpcy5fZmlsdGVycyA9IHt9O1xuICAgIHRoaXMuX3BhZ2UgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5fc2l6ZVBlclBhZ2UgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBlZGl0KHJvd0lkLCBkYXRhRmllbGQsIG5ld1ZhbHVlKSB7XG4gICAgY29uc3Qgcm93ID0gZ2V0Um93QnlSb3dJZCh0aGlzKShyb3dJZCk7XG4gICAgaWYgKHJvdykgXy5zZXQocm93LCBkYXRhRmllbGQsIG5ld1ZhbHVlKTtcbiAgfVxuXG4gIHNldFNvcnQoeyBkYXRhRmllbGQgfSwgb3JkZXIsIGRlZmF1bHRPcmRlcikge1xuICAgIHRoaXMuc29ydE9yZGVyID0gbmV4dE9yZGVyKHRoaXMpKGRhdGFGaWVsZCwgb3JkZXIsIGRlZmF1bHRPcmRlcik7XG4gICAgdGhpcy5zb3J0RmllbGQgPSBkYXRhRmllbGQ7XG4gIH1cblxuICBzb3J0QnkoeyBzb3J0RnVuYyB9KSB7XG4gICAgdGhpcy5kYXRhID0gc29ydCh0aGlzKShzb3J0RnVuYyk7XG4gIH1cblxuICBnZXRBbGxEYXRhKCkge1xuICAgIHJldHVybiB0aGlzLl9kYXRhO1xuICB9XG5cbiAgc2V0QWxsRGF0YShkYXRhKSB7XG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gIH1cblxuICBnZXQgZGF0YSgpIHtcbiAgICBpZiAoT2JqZWN0LmtleXModGhpcy5fZmlsdGVycykubGVuZ3RoID4gMCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ZpbHRlcmVkRGF0YTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX2RhdGE7XG4gIH1cbiAgc2V0IGRhdGEoZGF0YSkge1xuICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLl9maWx0ZXJzKS5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLl9maWx0ZXJlZERhdGEgPSBkYXRhO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9kYXRhID0gKGRhdGEgPyBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKSA6IFtdKTtcbiAgICB9XG4gIH1cblxuICBnZXQgZmlsdGVyZWREYXRhKCkgeyByZXR1cm4gdGhpcy5fZmlsdGVyZWREYXRhOyB9XG4gIHNldCBmaWx0ZXJlZERhdGEoZmlsdGVyZWREYXRhKSB7IHRoaXMuX2ZpbHRlcmVkRGF0YSA9IGZpbHRlcmVkRGF0YTsgfVxuXG4gIGdldCBrZXlGaWVsZCgpIHsgcmV0dXJuIHRoaXMuX2tleUZpZWxkOyB9XG4gIHNldCBrZXlGaWVsZChrZXlGaWVsZCkgeyB0aGlzLl9rZXlGaWVsZCA9IGtleUZpZWxkOyB9XG5cbiAgZ2V0IHNvcnRPcmRlcigpIHsgcmV0dXJuIHRoaXMuX3NvcnRPcmRlcjsgfVxuICBzZXQgc29ydE9yZGVyKHNvcnRPcmRlcikgeyB0aGlzLl9zb3J0T3JkZXIgPSBzb3J0T3JkZXI7IH1cblxuICBnZXQgcGFnZSgpIHsgcmV0dXJuIHRoaXMuX3BhZ2U7IH1cbiAgc2V0IHBhZ2UocGFnZSkgeyB0aGlzLl9wYWdlID0gcGFnZTsgfVxuXG4gIGdldCBzaXplUGVyUGFnZSgpIHsgcmV0dXJuIHRoaXMuX3NpemVQZXJQYWdlOyB9XG4gIHNldCBzaXplUGVyUGFnZShzaXplUGVyUGFnZSkgeyB0aGlzLl9zaXplUGVyUGFnZSA9IHNpemVQZXJQYWdlOyB9XG5cbiAgZ2V0IHNvcnRGaWVsZCgpIHsgcmV0dXJuIHRoaXMuX3NvcnRGaWVsZDsgfVxuICBzZXQgc29ydEZpZWxkKHNvcnRGaWVsZCkgeyB0aGlzLl9zb3J0RmllbGQgPSBzb3J0RmllbGQ7IH1cblxuICBnZXQgc2VsZWN0ZWQoKSB7IHJldHVybiB0aGlzLl9zZWxlY3RlZDsgfVxuICBzZXQgc2VsZWN0ZWQoc2VsZWN0ZWQpIHsgdGhpcy5fc2VsZWN0ZWQgPSBzZWxlY3RlZDsgfVxuXG4gIGdldCBmaWx0ZXJzKCkgeyByZXR1cm4gdGhpcy5fZmlsdGVyczsgfVxuICBzZXQgZmlsdGVycyhmaWx0ZXJzKSB7IHRoaXMuX2ZpbHRlcnMgPSBmaWx0ZXJzOyB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9zdG9yZS9pbmRleC5qcyIsIi8qIGVzbGludCBuby1uZXN0ZWQtdGVybmFyeTogMCAqL1xuLyogZXNsaW50IG5vLWxvbmVseS1pZjogMCAqL1xuLyogZXNsaW50IG5vLXVuZGVyc2NvcmUtZGFuZ2xlOiAwICovXG5pbXBvcnQgXyBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgQ29uc3QgZnJvbSAnLi4vY29uc3QnO1xuXG5mdW5jdGlvbiBjb21wYXJhdG9yKGEsIGIpIHtcbiAgbGV0IHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBiID09PSAnc3RyaW5nJykge1xuICAgIHJlc3VsdCA9IGIubG9jYWxlQ29tcGFyZShhKTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHQgPSBhID4gYiA/IC0xIDogKChhIDwgYikgPyAxIDogMCk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGNvbnN0IHNvcnQgPSAoeyBkYXRhLCBzb3J0T3JkZXIsIHNvcnRGaWVsZCB9KSA9PiAoc29ydEZ1bmMpID0+IHtcbiAgY29uc3QgX2RhdGEgPSBbLi4uZGF0YV07XG4gIF9kYXRhLnNvcnQoKGEsIGIpID0+IHtcbiAgICBsZXQgcmVzdWx0O1xuICAgIGxldCB2YWx1ZUEgPSBfLmdldChhLCBzb3J0RmllbGQpO1xuICAgIGxldCB2YWx1ZUIgPSBfLmdldChiLCBzb3J0RmllbGQpO1xuICAgIHZhbHVlQSA9IF8uaXNEZWZpbmVkKHZhbHVlQSkgPyB2YWx1ZUEgOiAnJztcbiAgICB2YWx1ZUIgPSBfLmlzRGVmaW5lZCh2YWx1ZUIpID8gdmFsdWVCIDogJyc7XG5cbiAgICBpZiAoc29ydEZ1bmMpIHtcbiAgICAgIHJlc3VsdCA9IHNvcnRGdW5jKHZhbHVlQSwgdmFsdWVCLCBzb3J0T3JkZXIsIHNvcnRGaWVsZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChzb3J0T3JkZXIgPT09IENvbnN0LlNPUlRfREVTQykge1xuICAgICAgICByZXN1bHQgPSBjb21wYXJhdG9yKHZhbHVlQSwgdmFsdWVCKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IGNvbXBhcmF0b3IodmFsdWVCLCB2YWx1ZUEpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9KTtcbiAgcmV0dXJuIF9kYXRhO1xufTtcblxuZXhwb3J0IGNvbnN0IG5leHRPcmRlciA9IHN0b3JlID0+IChmaWVsZCwgb3JkZXIsIGRlZmF1bHRPcmRlciA9IENvbnN0LlNPUlRfREVTQykgPT4ge1xuICBpZiAob3JkZXIpIHJldHVybiBvcmRlcjtcblxuICBpZiAoZmllbGQgIT09IHN0b3JlLnNvcnRGaWVsZCkge1xuICAgIHJldHVybiBkZWZhdWx0T3JkZXI7XG4gIH1cbiAgcmV0dXJuIHN0b3JlLnNvcnRPcmRlciA9PT0gQ29uc3QuU09SVF9ERVNDID8gQ29uc3QuU09SVF9BU0MgOiBDb25zdC5TT1JUX0RFU0M7XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi9zcmMvc3RvcmUvc29ydC5qcyIsIi8qIGVzbGludCByZWFjdC9wcm9wLXR5cGVzOiAwICovXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCByZW1vdGVSZXNvbHZlciBmcm9tICcuLi9wcm9wcy1yZXNvbHZlci9yZW1vdGUtcmVzb2x2ZXInO1xuXG5leHBvcnQgZGVmYXVsdCBCYXNlID0+XG4gIGNsYXNzIFNvcnRXcmFwcGVyIGV4dGVuZHMgcmVtb3RlUmVzb2x2ZXIoQ29tcG9uZW50KSB7XG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHN0b3JlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgdGhpcy5oYW5kbGVTb3J0ID0gdGhpcy5oYW5kbGVTb3J0LmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgY29uc3QgeyBjb2x1bW5zLCBkZWZhdWx0U29ydGVkLCBkZWZhdWx0U29ydERpcmVjdGlvbiwgc3RvcmUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAvLyBkZWZhdWx0U29ydGVkIGlzIGFuIGFycmF5LCBpdCdzIHJlYWR5IHRvIHVzZSBhcyBtdWx0aSAvIHNpbmdsZSBzb3J0XG4gICAgICAvLyB3aGVuIHdlIHN0YXJ0IHRvIHN1cHBvcnQgbXVsdGkgc29ydCwgcGxlYXNlIHVwZGF0ZSBmb2xsb3dpbmcgY29kZSB0byB1c2UgYXJyYXkuZm9yRWFjaFxuICAgICAgaWYgKGRlZmF1bHRTb3J0ZWQgJiYgZGVmYXVsdFNvcnRlZC5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IGRhdGFGaWVsZCA9IGRlZmF1bHRTb3J0ZWRbMF0uZGF0YUZpZWxkO1xuICAgICAgICBjb25zdCBvcmRlciA9IGRlZmF1bHRTb3J0ZWRbMF0ub3JkZXI7XG4gICAgICAgIGNvbnN0IGNvbHVtbiA9IGNvbHVtbnMuZmlsdGVyKGNvbCA9PiBjb2wuZGF0YUZpZWxkID09PSBkYXRhRmllbGQpO1xuICAgICAgICBpZiAoY29sdW1uLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzdG9yZS5zZXRTb3J0KGNvbHVtblswXSwgb3JkZXIsIGRlZmF1bHRTb3J0RGlyZWN0aW9uKTtcblxuICAgICAgICAgIGlmIChjb2x1bW5bMF0ub25Tb3J0KSB7XG4gICAgICAgICAgICBjb2x1bW5bMF0ub25Tb3J0KHN0b3JlLnNvcnRGaWVsZCwgc3RvcmUuc29ydE9yZGVyKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodGhpcy5pc1JlbW90ZVNvcnQoKSB8fCB0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZVNvcnRDaGFuZ2UoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RvcmUuc29ydEJ5KGNvbHVtblswXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGxldCBzb3J0ZWRDb2x1bW47XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5leHRQcm9wcy5jb2x1bW5zLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmIChuZXh0UHJvcHMuY29sdW1uc1tpXS5kYXRhRmllbGQgPT09IG5leHRQcm9wcy5zdG9yZS5zb3J0RmllbGQpIHtcbiAgICAgICAgICBzb3J0ZWRDb2x1bW4gPSBuZXh0UHJvcHMuY29sdW1uc1tpXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHNvcnRlZENvbHVtbiAmJiBzb3J0ZWRDb2x1bW4uc29ydCkge1xuICAgICAgICBuZXh0UHJvcHMuc3RvcmUuc29ydEJ5KHNvcnRlZENvbHVtbik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaGFuZGxlU29ydChjb2x1bW4pIHtcbiAgICAgIGNvbnN0IHsgc3RvcmUgfSA9IHRoaXMucHJvcHM7XG4gICAgICBzdG9yZS5zZXRTb3J0KGNvbHVtbiwgdW5kZWZpbmVkLCB0aGlzLnByb3BzLmRlZmF1bHRTb3J0RGlyZWN0aW9uKTtcblxuICAgICAgaWYgKGNvbHVtbi5vblNvcnQpIHtcbiAgICAgICAgY29sdW1uLm9uU29ydChzdG9yZS5zb3J0RmllbGQsIHN0b3JlLnNvcnRPcmRlcik7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmlzUmVtb3RlU29ydCgpIHx8IHRoaXMuaXNSZW1vdGVQYWdpbmF0aW9uKCkpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVTb3J0Q2hhbmdlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdG9yZS5zb3J0QnkoY29sdW1uKTtcbiAgICAgICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxCYXNlXG4gICAgICAgICAgeyAuLi50aGlzLnByb3BzIH1cbiAgICAgICAgICBvblNvcnQ9eyB0aGlzLmhhbmRsZVNvcnQgfVxuICAgICAgICAgIGRhdGE9eyB0aGlzLnByb3BzLnN0b3JlLmRhdGEgfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9zb3J0L3dyYXBwZXIuanMiLCIvKiBlc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246IDAgKi9cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgQ29uc3QgZnJvbSAnLi4vY29uc3QnO1xuaW1wb3J0IHtcbiAgaXNBbnlTZWxlY3RlZFJvdyxcbiAgc2VsZWN0YWJsZUtleXMsXG4gIHVuU2VsZWN0YWJsZUtleXMsXG4gIGdldFNlbGVjdGVkUm93c1xufSBmcm9tICcuLi9zdG9yZS9zZWxlY3Rpb24nO1xuaW1wb3J0IHsgZ2V0Um93QnlSb3dJZCB9IGZyb20gJy4uL3N0b3JlL3Jvd3MnO1xuXG5leHBvcnQgZGVmYXVsdCBCYXNlID0+XG4gIGNsYXNzIFJvd1NlbGVjdGlvbldyYXBwZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICBzdG9yZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgICAgc2VsZWN0Um93OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgdGhpcy5oYW5kbGVSb3dTZWxlY3QgPSB0aGlzLmhhbmRsZVJvd1NlbGVjdC5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5oYW5kbGVBbGxSb3dzU2VsZWN0ID0gdGhpcy5oYW5kbGVBbGxSb3dzU2VsZWN0LmJpbmQodGhpcyk7XG5cbiAgICAgIHByb3BzLnN0b3JlLnNlbGVjdGVkID0gcHJvcHMuc2VsZWN0Um93LnNlbGVjdGVkIHx8IFtdO1xuICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgc2VsZWN0ZWRSb3dLZXlzOiBwcm9wcy5zdG9yZS5zZWxlY3RlZFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgbmV4dFByb3BzLnN0b3JlLnNlbGVjdGVkID0gbmV4dFByb3BzLnNlbGVjdFJvdy5zZWxlY3RlZCB8fCBbXTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoKCkgPT4gKHtcbiAgICAgICAgc2VsZWN0ZWRSb3dLZXlzOiBuZXh0UHJvcHMuc3RvcmUuc2VsZWN0ZWRcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByb3cgc2VsZWN0aW9uIGhhbmRsZXJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcm93S2V5IC0gcm93IGtleSBvZiB3aGF0IHdhcyBzZWxlY3RlZC5cbiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IGNoZWNrZWQgLSBuZXh0IGNoZWNrZWQgc3RhdHVzIG9mIGlucHV0IGJ1dHRvbi5cbiAgICAgKi9cbiAgICBoYW5kbGVSb3dTZWxlY3Qocm93S2V5LCBjaGVja2VkLCByb3dJbmRleCkge1xuICAgICAgY29uc3QgeyBzZWxlY3RSb3c6IHsgbW9kZSwgb25TZWxlY3QgfSwgc3RvcmUgfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCB7IFJPV19TRUxFQ1RfU0lOR0xFIH0gPSBDb25zdDtcblxuICAgICAgbGV0IGN1cnJTZWxlY3RlZCA9IFsuLi5zdG9yZS5zZWxlY3RlZF07XG5cbiAgICAgIGlmIChtb2RlID09PSBST1dfU0VMRUNUX1NJTkdMRSkgeyAvLyB3aGVuIHNlbGVjdCBtb2RlIGlzIHJhZGlvXG4gICAgICAgIGN1cnJTZWxlY3RlZCA9IFtyb3dLZXldO1xuICAgICAgfSBlbHNlIGlmIChjaGVja2VkKSB7IC8vIHdoZW4gc2VsZWN0IG1vZGUgaXMgY2hlY2tib3hcbiAgICAgICAgY3VyclNlbGVjdGVkLnB1c2gocm93S2V5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJTZWxlY3RlZCA9IGN1cnJTZWxlY3RlZC5maWx0ZXIodmFsdWUgPT4gdmFsdWUgIT09IHJvd0tleSk7XG4gICAgICB9XG5cbiAgICAgIHN0b3JlLnNlbGVjdGVkID0gY3VyclNlbGVjdGVkO1xuXG4gICAgICBpZiAob25TZWxlY3QpIHtcbiAgICAgICAgY29uc3Qgcm93ID0gZ2V0Um93QnlSb3dJZChzdG9yZSkocm93S2V5KTtcbiAgICAgICAgb25TZWxlY3Qocm93LCBjaGVja2VkLCByb3dJbmRleCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0U3RhdGUoKCkgPT4gKHtcbiAgICAgICAgc2VsZWN0ZWRSb3dLZXlzOiBjdXJyU2VsZWN0ZWRcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBoYW5kbGUgYWxsIHJvd3Mgc2VsZWN0aW9uIG9uIGhlYWRlciBjZWxsIGJ5IHN0b3JlLnNlbGVjdGVkIG9yIGdpdmVuIHNwZWNpZmljIHJlc3VsdC5cbiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IG9wdGlvbiAtIGN1c3RvbWl6ZWQgcmVzdWx0IGZvciBhbGwgcm93cyBzZWxlY3Rpb25cbiAgICAgKi9cbiAgICBoYW5kbGVBbGxSb3dzU2VsZWN0KG9wdGlvbikge1xuICAgICAgY29uc3QgeyBzdG9yZSwgc2VsZWN0Um93OiB7XG4gICAgICAgIG9uU2VsZWN0QWxsLFxuICAgICAgICBub25TZWxlY3RhYmxlXG4gICAgICB9IH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3Qgc2VsZWN0ZWQgPSBpc0FueVNlbGVjdGVkUm93KHN0b3JlKShub25TZWxlY3RhYmxlKTtcblxuICAgICAgLy8gc2V0IG5leHQgc3RhdHVzIG9mIGFsbCByb3cgc2VsZWN0ZWQgYnkgc3RvcmUuc2VsZWN0ZWQgb3IgY3VzdG9taXppbmcgYnkgdXNlci5cbiAgICAgIGNvbnN0IHJlc3VsdCA9IG9wdGlvbiB8fCAhc2VsZWN0ZWQ7XG5cbiAgICAgIGNvbnN0IGN1cnJTZWxlY3RlZCA9IHJlc3VsdCA/XG4gICAgICAgIHNlbGVjdGFibGVLZXlzKHN0b3JlKShub25TZWxlY3RhYmxlKSA6XG4gICAgICAgIHVuU2VsZWN0YWJsZUtleXMoc3RvcmUpKG5vblNlbGVjdGFibGUpO1xuXG5cbiAgICAgIHN0b3JlLnNlbGVjdGVkID0gY3VyclNlbGVjdGVkO1xuXG4gICAgICBpZiAob25TZWxlY3RBbGwpIHtcbiAgICAgICAgb25TZWxlY3RBbGwocmVzdWx0LCBnZXRTZWxlY3RlZFJvd3Moc3RvcmUpKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZXRTdGF0ZSgoKSA9PiAoe1xuICAgICAgICBzZWxlY3RlZFJvd0tleXM6IGN1cnJTZWxlY3RlZFxuICAgICAgfSkpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxCYXNlXG4gICAgICAgICAgeyAuLi50aGlzLnByb3BzIH1cbiAgICAgICAgICBvblJvd1NlbGVjdD17IHRoaXMuaGFuZGxlUm93U2VsZWN0IH1cbiAgICAgICAgICBvbkFsbFJvd3NTZWxlY3Q9eyB0aGlzLmhhbmRsZUFsbFJvd3NTZWxlY3QgfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyL3NyYy9yb3ctc2VsZWN0aW9uL3dyYXBwZXIuanMiXSwic291cmNlUm9vdCI6IiJ9
//# sourceMappingURL=react-bootstrap-table2.js.map